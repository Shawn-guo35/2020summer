// VBConversions Note: VB project level imports
using System.Collections.Generic;
using System;
using System.Linq;
using System.Drawing;
using System.Diagnostics;
using System.Threading.Tasks;
using System.Data;
using System.Xml.Linq;
using Microsoft.VisualBasic;
using System.Collections;
using System.Windows.Forms;
// End of VB project level imports

using WindowsApp1;

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsApp1
{
	
	
	
	///<summary>
	///Represents a strongly typed in-memory cache of data.
	///</summary>
	[global::System.Serializable(), 
	global::System.ComponentModel.DesignerCategoryAttribute("code"), 
	global::System.ComponentModel.ToolboxItem(true), 
	global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), 
	global::System.Xml.Serialization.XmlRootAttribute("dataDataSet"), 
	global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]public 
	partial class dataDataSet : global::System.Data.DataSet
	{
		
		private LeaseDataTable tableLease;
		
		private OrdersDataTable tableOrders;
		
		private UsersDataTable tableUsers;
		
		private VenueDataTable tableVenue;
		
		private VtypeDataTable tableVtype;
		
		private Users1DataTable tableUsers1;
		
		private Lease1DataTable tableLease1;
		
		private Lease2DataTable tableLease2;
		
		private Vtype1DataTable tableVtype1;
		
		private Venue1DataTable tableVenue1;
		
		private Vtype2DataTable tableVtype2;
		
		private Venue2DataTable tableVenue2;
		
		private Users2DataTable tableUsers2;
		
		private global::System.Data.DataRelation relationFK_LEASE_租借_VENUE;
		
		private global::System.Data.DataRelation relationFK_ORDERS_ORDERS_LEASE;
		
		private global::System.Data.DataRelation relationFK_ORDERS_ORDERS2_USERS;
		
		private global::System.Data.DataRelation relationFK_VENUE_包含_VTYPE;
		
		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public dataDataSet()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected dataDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context, false)
		{
			if (this.IsBinarySerialized(info, context) == true)
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return ;
			}
			string strSchema = System.Convert.ToString(info.GetValue("XmlSchema", typeof(string)));
			if (this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if (!ReferenceEquals((ds.Tables["Lease"]), null))
				{
					base.Tables.Add(new LeaseDataTable(ds.Tables["Lease"]));
				}
				if (!ReferenceEquals((ds.Tables["Orders"]), null))
				{
					base.Tables.Add(new OrdersDataTable(ds.Tables["Orders"]));
				}
				if (!ReferenceEquals((ds.Tables["Users"]), null))
				{
					base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
				}
				if (!ReferenceEquals((ds.Tables["Venue"]), null))
				{
					base.Tables.Add(new VenueDataTable(ds.Tables["Venue"]));
				}
				if (!ReferenceEquals((ds.Tables["Vtype"]), null))
				{
					base.Tables.Add(new VtypeDataTable(ds.Tables["Vtype"]));
				}
				if (!ReferenceEquals((ds.Tables["Users1"]), null))
				{
					base.Tables.Add(new Users1DataTable(ds.Tables["Users1"]));
				}
				if (!ReferenceEquals((ds.Tables["Lease1"]), null))
				{
					base.Tables.Add(new Lease1DataTable(ds.Tables["Lease1"]));
				}
				if (!ReferenceEquals((ds.Tables["Lease2"]), null))
				{
					base.Tables.Add(new Lease2DataTable(ds.Tables["Lease2"]));
				}
				if (!ReferenceEquals((ds.Tables["Vtype1"]), null))
				{
					base.Tables.Add(new Vtype1DataTable(ds.Tables["Vtype1"]));
				}
				if (!ReferenceEquals((ds.Tables["Venue1"]), null))
				{
					base.Tables.Add(new Venue1DataTable(ds.Tables["Venue1"]));
				}
				if (!ReferenceEquals((ds.Tables["Vtype2"]), null))
				{
					base.Tables.Add(new Vtype2DataTable(ds.Tables["Vtype2"]));
				}
				if (!ReferenceEquals((ds.Tables["Venue2"]), null))
				{
					base.Tables.Add(new Venue2DataTable(ds.Tables["Venue2"]));
				}
				if (!ReferenceEquals((ds.Tables["Users2"]), null))
				{
					base.Tables.Add(new Users2DataTable(ds.Tables["Users2"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public LeaseDataTable Lease
		{
			get
			{
				return this.tableLease;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public OrdersDataTable Orders
		{
			get
			{
				return this.tableOrders;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public UsersDataTable Users
		{
			get
			{
				return this.tableUsers;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public VenueDataTable Venue
		{
			get
			{
				return this.tableVenue;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public VtypeDataTable Vtype
		{
			get
			{
				return this.tableVtype;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Users1DataTable Users1
		{
			get
			{
				return this.tableUsers1;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Lease1DataTable Lease1
		{
			get
			{
				return this.tableLease1;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Lease2DataTable Lease2
		{
			get
			{
				return this.tableLease2;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Vtype1DataTable Vtype1
		{
			get
			{
				return this.tableVtype1;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Venue1DataTable Venue1
		{
			get
			{
				return this.tableVenue1;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Vtype2DataTable Vtype2
		{
			get
			{
				return this.tableVtype2;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Venue2DataTable Venue2
		{
			get
			{
				return this.tableVenue2;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.Browsable(false), 
		global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public Users2DataTable Users2
		{
			get
			{
				return this.tableUsers2;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.BrowsableAttribute(true), 
		global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
		global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataSet Clone()
		{
			dataDataSet cln = (dataDataSet) (base.Clone());
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override bool ShouldSerializeTables()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override bool ShouldSerializeRelations()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if (this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if (!ReferenceEquals((ds.Tables["Lease"]), null))
				{
					base.Tables.Add(new LeaseDataTable(ds.Tables["Lease"]));
				}
				if (!ReferenceEquals((ds.Tables["Orders"]), null))
				{
					base.Tables.Add(new OrdersDataTable(ds.Tables["Orders"]));
				}
				if (!ReferenceEquals((ds.Tables["Users"]), null))
				{
					base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
				}
				if (!ReferenceEquals((ds.Tables["Venue"]), null))
				{
					base.Tables.Add(new VenueDataTable(ds.Tables["Venue"]));
				}
				if (!ReferenceEquals((ds.Tables["Vtype"]), null))
				{
					base.Tables.Add(new VtypeDataTable(ds.Tables["Vtype"]));
				}
				if (!ReferenceEquals((ds.Tables["Users1"]), null))
				{
					base.Tables.Add(new Users1DataTable(ds.Tables["Users1"]));
				}
				if (!ReferenceEquals((ds.Tables["Lease1"]), null))
				{
					base.Tables.Add(new Lease1DataTable(ds.Tables["Lease1"]));
				}
				if (!ReferenceEquals((ds.Tables["Lease2"]), null))
				{
					base.Tables.Add(new Lease2DataTable(ds.Tables["Lease2"]));
				}
				if (!ReferenceEquals((ds.Tables["Vtype1"]), null))
				{
					base.Tables.Add(new Vtype1DataTable(ds.Tables["Vtype1"]));
				}
				if (!ReferenceEquals((ds.Tables["Venue1"]), null))
				{
					base.Tables.Add(new Venue1DataTable(ds.Tables["Venue1"]));
				}
				if (!ReferenceEquals((ds.Tables["Vtype2"]), null))
				{
					base.Tables.Add(new Vtype2DataTable(ds.Tables["Vtype2"]));
				}
				if (!ReferenceEquals((ds.Tables["Venue2"]), null))
				{
					base.Tables.Add(new Venue2DataTable(ds.Tables["Venue2"]));
				}
				if (!ReferenceEquals((ds.Tables["Users2"]), null))
				{
					base.Tables.Add(new Users2DataTable(ds.Tables["Users2"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
		{
			this.InitVars(true);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars(bool initTable)
		{
			this.tableLease = (LeaseDataTable) (base.Tables["Lease"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableLease), null))
				{
					this.tableLease.InitVars();
				}
			}
			this.tableOrders = (OrdersDataTable) (base.Tables["Orders"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableOrders), null))
				{
					this.tableOrders.InitVars();
				}
			}
			this.tableUsers = (UsersDataTable) (base.Tables["Users"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableUsers), null))
				{
					this.tableUsers.InitVars();
				}
			}
			this.tableVenue = (VenueDataTable) (base.Tables["Venue"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableVenue), null))
				{
					this.tableVenue.InitVars();
				}
			}
			this.tableVtype = (VtypeDataTable) (base.Tables["Vtype"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableVtype), null))
				{
					this.tableVtype.InitVars();
				}
			}
			this.tableUsers1 = (Users1DataTable) (base.Tables["Users1"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableUsers1), null))
				{
					this.tableUsers1.InitVars();
				}
			}
			this.tableLease1 = (Lease1DataTable) (base.Tables["Lease1"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableLease1), null))
				{
					this.tableLease1.InitVars();
				}
			}
			this.tableLease2 = (Lease2DataTable) (base.Tables["Lease2"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableLease2), null))
				{
					this.tableLease2.InitVars();
				}
			}
			this.tableVtype1 = (Vtype1DataTable) (base.Tables["Vtype1"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableVtype1), null))
				{
					this.tableVtype1.InitVars();
				}
			}
			this.tableVenue1 = (Venue1DataTable) (base.Tables["Venue1"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableVenue1), null))
				{
					this.tableVenue1.InitVars();
				}
			}
			this.tableVtype2 = (Vtype2DataTable) (base.Tables["Vtype2"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableVtype2), null))
				{
					this.tableVtype2.InitVars();
				}
			}
			this.tableVenue2 = (Venue2DataTable) (base.Tables["Venue2"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableVenue2), null))
				{
					this.tableVenue2.InitVars();
				}
			}
			this.tableUsers2 = (Users2DataTable) (base.Tables["Users2"]);
			if (initTable == true)
			{
				if (!ReferenceEquals((this.tableUsers2), null))
				{
					this.tableUsers2.InitVars();
				}
			}
			this.relationFK_LEASE_租借_VENUE = this.Relations["FK_LEASE_租借_VENUE"];
			this.relationFK_ORDERS_ORDERS_LEASE = this.Relations["FK_ORDERS_ORDERS_LEASE"];
			this.relationFK_ORDERS_ORDERS2_USERS = this.Relations["FK_ORDERS_ORDERS2_USERS"];
			this.relationFK_VENUE_包含_VTYPE = this.Relations["FK_VENUE_包含_VTYPE"];
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
		{
			this.DataSetName = "dataDataSet";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/dataDataSet.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tableLease = new LeaseDataTable();
			base.Tables.Add(this.tableLease);
			this.tableOrders = new OrdersDataTable();
			base.Tables.Add(this.tableOrders);
			this.tableUsers = new UsersDataTable();
			base.Tables.Add(this.tableUsers);
			this.tableVenue = new VenueDataTable();
			base.Tables.Add(this.tableVenue);
			this.tableVtype = new VtypeDataTable();
			base.Tables.Add(this.tableVtype);
			this.tableUsers1 = new Users1DataTable();
			base.Tables.Add(this.tableUsers1);
			this.tableLease1 = new Lease1DataTable();
			base.Tables.Add(this.tableLease1);
			this.tableLease2 = new Lease2DataTable();
			base.Tables.Add(this.tableLease2);
			this.tableVtype1 = new Vtype1DataTable();
			base.Tables.Add(this.tableVtype1);
			this.tableVenue1 = new Venue1DataTable();
			base.Tables.Add(this.tableVenue1);
			this.tableVtype2 = new Vtype2DataTable();
			base.Tables.Add(this.tableVtype2);
			this.tableVenue2 = new Venue2DataTable();
			base.Tables.Add(this.tableVenue2);
			this.tableUsers2 = new Users2DataTable();
			base.Tables.Add(this.tableUsers2);
			this.relationFK_LEASE_租借_VENUE = new global::System.Data.DataRelation("FK_LEASE_租借_VENUE", new global::System.Data.DataColumn[] {this.tableVenue.VnameColumn, this.tableVenue.VnoColumn}, new global::System.Data.DataColumn[] {this.tableLease.VnameColumn, this.tableLease.VnoColumn}, false);
			this.Relations.Add(this.relationFK_LEASE_租借_VENUE);
			this.relationFK_ORDERS_ORDERS_LEASE = new global::System.Data.DataRelation("FK_ORDERS_ORDERS_LEASE", new global::System.Data.DataColumn[] {this.tableLease.VnameColumn, this.tableLease.VnoColumn, this.tableLease.StimeColumn}, new global::System.Data.DataColumn[] {this.tableOrders.VnameColumn, this.tableOrders.VnoColumn, this.tableOrders.StimeColumn}, false);
			this.Relations.Add(this.relationFK_ORDERS_ORDERS_LEASE);
			this.relationFK_ORDERS_ORDERS2_USERS = new global::System.Data.DataRelation("FK_ORDERS_ORDERS2_USERS", new global::System.Data.DataColumn[] {this.tableUsers.IDColumn}, new global::System.Data.DataColumn[] {this.tableOrders.IDColumn}, false);
			this.Relations.Add(this.relationFK_ORDERS_ORDERS2_USERS);
			this.relationFK_VENUE_包含_VTYPE = new global::System.Data.DataRelation("FK_VENUE_包含_VTYPE", new global::System.Data.DataColumn[] {this.tableVtype.VnameColumn}, new global::System.Data.DataColumn[] {this.tableVenue.VnameColumn}, false);
			this.Relations.Add(this.relationFK_VENUE_包含_VTYPE);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeLease()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeOrders()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeUsers()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeVenue()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeVtype()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeUsers1()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeLease1()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeLease2()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeVtype1()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeVenue1()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeVtype2()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeVenue2()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private bool ShouldSerializeUsers2()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if (e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)
			{
				this.InitVars();
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			dataDataSet ds = new dataDataSet();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
					while (schemas.MoveNext())
					{
						schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
						s2.SetLength(0);
						schema.Write(s2);
						if (s1.Length == s2.Length)
						{
							s1.Position = 0;
							s2.Position = 0;
							
							while ((s1.Position != s1.Length) 
								&& (s1.ReadByte() == s2.ReadByte()))
							{
								
								
							}
							if (s1.Position == s1.Length)
							{
								return type;
							}
						}
						
					}
				}
				finally
				{
					if (!ReferenceEquals((s1), null))
					{
						s1.Close();
					}
					if (!ReferenceEquals((s2), null))
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void LeaseRowChangeEventHandler(object sender, LeaseRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void OrdersRowChangeEventHandler(object sender, OrdersRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void UsersRowChangeEventHandler(object sender, UsersRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void VenueRowChangeEventHandler(object sender, VenueRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void VtypeRowChangeEventHandler(object sender, VtypeRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Users1RowChangeEventHandler(object sender, Users1RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Lease1RowChangeEventHandler(object sender, Lease1RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Lease2RowChangeEventHandler(object sender, Lease2RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Vtype1RowChangeEventHandler(object sender, Vtype1RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Venue1RowChangeEventHandler(object sender, Venue1RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Vtype2RowChangeEventHandler(object sender, Vtype2RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Venue2RowChangeEventHandler(object sender, Venue2RowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public delegate void Users2RowChangeEventHandler(object sender, Users2RowChangeEvent e);
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class LeaseDataTable : global::System.Data.TypedTableBase<LeaseRow>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			private global::System.Data.DataColumn columnStime;
			
			private global::System.Data.DataColumn columnEtime;
			
			private global::System.Data.DataColumn columnCondition;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseDataTable()
			{
				this.TableName = "Lease";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal LeaseDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected LeaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn StimeColumn
			{
				get
				{
					return this.columnStime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn EtimeColumn
			{
				get
				{
					return this.columnEtime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn ConditionColumn
			{
				get
				{
					return this.columnCondition;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow this[int index]
			{
				get
				{
					return ((LeaseRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRowChangeEventHandler LeaseRowChangingEvent;
			public event LeaseRowChangeEventHandler LeaseRowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRowChangeEventHandler LeaseRowChangedEvent;
			public event LeaseRowChangeEventHandler LeaseRowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRowChangeEventHandler LeaseRowDeletingEvent;
			public event LeaseRowChangeEventHandler LeaseRowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRowChangeEventHandler LeaseRowDeletedEvent;
			public event LeaseRowChangeEventHandler LeaseRowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddLeaseRow(LeaseRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow AddLeaseRow(string Vname, string Vno, DateTime Stime, DateTime Etime, string Condition)
			{
				LeaseRow rowLeaseRow = (LeaseRow) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, Vno, Stime, Etime, Condition};
				rowLeaseRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowLeaseRow);
				return rowLeaseRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow FindByVnameVnoStime(string Vname, string Vno, DateTime Stime)
			{
				return ((LeaseRow) (this.Rows.Find(new object[] {Vname, Vno, Stime})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				LeaseDataTable cln = (LeaseDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new LeaseDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
				this.columnStime = base.Columns["Stime"];
				this.columnEtime = base.Columns["Etime"];
				this.columnCondition = base.Columns["Condition"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.columnStime = new global::System.Data.DataColumn("Stime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStime);
				this.columnEtime = new global::System.Data.DataColumn("Etime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEtime);
				this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCondition);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname, this.columnVno, this.columnStime}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
				this.columnStime.AllowDBNull = false;
				this.columnEtime.AllowDBNull = false;
				this.columnCondition.AllowDBNull = false;
				this.columnCondition.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow NewLeaseRow()
			{
				return ((LeaseRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new LeaseRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(LeaseRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.LeaseRowChangedEvent), null))
				{
					LeaseRowChangedEvent(this, new LeaseRowChangeEvent((LeaseRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.LeaseRowChangingEvent), null))
				{
					LeaseRowChangingEvent(this, new LeaseRowChangeEvent((LeaseRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.LeaseRowDeletedEvent), null))
				{
					LeaseRowDeletedEvent(this, new LeaseRowChangeEvent((LeaseRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.LeaseRowDeletingEvent), null))
				{
					LeaseRowDeletingEvent(this, new LeaseRowChangeEvent((LeaseRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveLeaseRow(LeaseRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "LeaseDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class OrdersDataTable : global::System.Data.TypedTableBase<OrdersRow>
		{
			
			private global::System.Data.DataColumn columnID;
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			private global::System.Data.DataColumn columnStime;
			
			private global::System.Data.DataColumn columnEtime;
			
			private global::System.Data.DataColumn columnLtime;
			
			private global::System.Data.DataColumn columnFee;
			
			private global::System.Data.DataColumn columnOrderno;
			
			private global::System.Data.DataColumn columnUname;
			
			private global::System.Data.DataColumn columnRemark;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersDataTable()
			{
				this.TableName = "Orders";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal OrdersDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected OrdersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn IDColumn
			{
				get
				{
					return this.columnID;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn StimeColumn
			{
				get
				{
					return this.columnStime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn EtimeColumn
			{
				get
				{
					return this.columnEtime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn LtimeColumn
			{
				get
				{
					return this.columnLtime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn FeeColumn
			{
				get
				{
					return this.columnFee;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn OrdernoColumn
			{
				get
				{
					return this.columnOrderno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UnameColumn
			{
				get
				{
					return this.columnUname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn RemarkColumn
			{
				get
				{
					return this.columnRemark;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow this[int index]
			{
				get
				{
					return ((OrdersRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRowChangeEventHandler OrdersRowChangingEvent;
			public event OrdersRowChangeEventHandler OrdersRowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRowChangeEventHandler OrdersRowChangedEvent;
			public event OrdersRowChangeEventHandler OrdersRowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRowChangeEventHandler OrdersRowDeletingEvent;
			public event OrdersRowChangeEventHandler OrdersRowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRowChangeEventHandler OrdersRowDeletedEvent;
			public event OrdersRowChangeEventHandler OrdersRowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddOrdersRow(OrdersRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow AddOrdersRow(UsersRow parentUsersRowByFK_ORDERS_ORDERS2_USERS, string Vname, string Vno, DateTime Stime, DateTime Etime, int Ltime, float Fee, string Orderno, string Uname, string Remark)
			{
				OrdersRow rowOrdersRow = (OrdersRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, Vname, Vno, Stime, Etime, Ltime, Fee, Orderno, Uname, Remark};
				if (!ReferenceEquals((parentUsersRowByFK_ORDERS_ORDERS2_USERS), null))
				{
					columnValuesArray[0] = parentUsersRowByFK_ORDERS_ORDERS2_USERS[0];
				}
				rowOrdersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowOrdersRow);
				return rowOrdersRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow FindByIDVnameVnoStime(string ID, string Vname, string Vno, DateTime Stime)
			{
				return ((OrdersRow) (this.Rows.Find(new object[] {ID, Vname, Vno, Stime})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				OrdersDataTable cln = (OrdersDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new OrdersDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnID = base.Columns["ID"];
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
				this.columnStime = base.Columns["Stime"];
				this.columnEtime = base.Columns["Etime"];
				this.columnLtime = base.Columns["Ltime"];
				this.columnFee = base.Columns["Fee"];
				this.columnOrderno = base.Columns["Orderno"];
				this.columnUname = base.Columns["Uname"];
				this.columnRemark = base.Columns["Remark"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnID);
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.columnStime = new global::System.Data.DataColumn("Stime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStime);
				this.columnEtime = new global::System.Data.DataColumn("Etime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEtime);
				this.columnLtime = new global::System.Data.DataColumn("Ltime", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLtime);
				this.columnFee = new global::System.Data.DataColumn("Fee", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFee);
				this.columnOrderno = new global::System.Data.DataColumn("Orderno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnOrderno);
				this.columnUname = new global::System.Data.DataColumn("Uname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUname);
				this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRemark);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnID, this.columnVname, this.columnVno, this.columnStime}, true));
				this.columnID.AllowDBNull = false;
				this.columnID.MaxLength = 20;
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
				this.columnStime.AllowDBNull = false;
				this.columnEtime.AllowDBNull = false;
				this.columnLtime.AllowDBNull = false;
				this.columnFee.AllowDBNull = false;
				this.columnOrderno.AllowDBNull = false;
				this.columnOrderno.MaxLength = 20;
				this.columnUname.AllowDBNull = false;
				this.columnUname.MaxLength = 10;
				this.columnRemark.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow NewOrdersRow()
			{
				return ((OrdersRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new OrdersRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(OrdersRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.OrdersRowChangedEvent), null))
				{
					OrdersRowChangedEvent(this, new OrdersRowChangeEvent((OrdersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.OrdersRowChangingEvent), null))
				{
					OrdersRowChangingEvent(this, new OrdersRowChangeEvent((OrdersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.OrdersRowDeletedEvent), null))
				{
					OrdersRowDeletedEvent(this, new OrdersRowChangeEvent((OrdersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.OrdersRowDeletingEvent), null))
				{
					OrdersRowDeletingEvent(this, new OrdersRowChangeEvent((OrdersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveOrdersRow(OrdersRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "OrdersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class UsersDataTable : global::System.Data.TypedTableBase<UsersRow>
		{
			
			private global::System.Data.DataColumn columnID;
			
			private global::System.Data.DataColumn columnUname;
			
			private global::System.Data.DataColumn columnUidentity;
			
			private global::System.Data.DataColumn columnUpassword;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersDataTable()
			{
				this.TableName = "Users";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal UsersDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn IDColumn
			{
				get
				{
					return this.columnID;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UnameColumn
			{
				get
				{
					return this.columnUname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UidentityColumn
			{
				get
				{
					return this.columnUidentity;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UpasswordColumn
			{
				get
				{
					return this.columnUpassword;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRow this[int index]
			{
				get
				{
					return ((UsersRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRowChangeEventHandler UsersRowChangingEvent;
			public event UsersRowChangeEventHandler UsersRowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRowChangeEventHandler UsersRowChangedEvent;
			public event UsersRowChangeEventHandler UsersRowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRowChangeEventHandler UsersRowDeletingEvent;
			public event UsersRowChangeEventHandler UsersRowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRowChangeEventHandler UsersRowDeletedEvent;
			public event UsersRowChangeEventHandler UsersRowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddUsersRow(UsersRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRow AddUsersRow(string ID, string Uname, string Uidentity, string Upassword)
			{
				UsersRow rowUsersRow = (UsersRow) (this.NewRow());
				object[] columnValuesArray = new object[] {ID, Uname, Uidentity, Upassword};
				rowUsersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowUsersRow);
				return rowUsersRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRow FindByID(string ID)
			{
				return ((UsersRow) (this.Rows.Find(new object[] {ID})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				UsersDataTable cln = (UsersDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new UsersDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnID = base.Columns["ID"];
				this.columnUname = base.Columns["Uname"];
				this.columnUidentity = base.Columns["Uidentity"];
				this.columnUpassword = base.Columns["Upassword"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnID);
				this.columnUname = new global::System.Data.DataColumn("Uname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUname);
				this.columnUidentity = new global::System.Data.DataColumn("Uidentity", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUidentity);
				this.columnUpassword = new global::System.Data.DataColumn("Upassword", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUpassword);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnID}, true));
				this.columnID.AllowDBNull = false;
				this.columnID.Unique = true;
				this.columnID.MaxLength = 20;
				this.columnUname.AllowDBNull = false;
				this.columnUname.MaxLength = 10;
				this.columnUidentity.AllowDBNull = false;
				this.columnUidentity.MaxLength = 10;
				this.columnUpassword.AllowDBNull = false;
				this.columnUpassword.MaxLength = 20;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRow NewUsersRow()
			{
				return ((UsersRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new UsersRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(UsersRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.UsersRowChangedEvent), null))
				{
					UsersRowChangedEvent(this, new UsersRowChangeEvent((UsersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.UsersRowChangingEvent), null))
				{
					UsersRowChangingEvent(this, new UsersRowChangeEvent((UsersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.UsersRowDeletedEvent), null))
				{
					UsersRowDeletedEvent(this, new UsersRowChangeEvent((UsersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.UsersRowDeletingEvent), null))
				{
					UsersRowDeletingEvent(this, new UsersRowChangeEvent((UsersRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveUsersRow(UsersRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "UsersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class VenueDataTable : global::System.Data.TypedTableBase<VenueRow>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueDataTable()
			{
				this.TableName = "Venue";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal VenueDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected VenueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow this[int index]
			{
				get
				{
					return ((VenueRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRowChangeEventHandler VenueRowChangingEvent;
			public event VenueRowChangeEventHandler VenueRowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRowChangeEventHandler VenueRowChangedEvent;
			public event VenueRowChangeEventHandler VenueRowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRowChangeEventHandler VenueRowDeletingEvent;
			public event VenueRowChangeEventHandler VenueRowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRowChangeEventHandler VenueRowDeletedEvent;
			public event VenueRowChangeEventHandler VenueRowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddVenueRow(VenueRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow AddVenueRow(VtypeRow parentVtypeRowByFK_VENUE_包含_VTYPE, string Vno)
			{
				VenueRow rowVenueRow = (VenueRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, Vno};
				if (!ReferenceEquals((parentVtypeRowByFK_VENUE_包含_VTYPE), null))
				{
					columnValuesArray[0] = parentVtypeRowByFK_VENUE_包含_VTYPE[0];
				}
				rowVenueRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowVenueRow);
				return rowVenueRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow FindByVnameVno(string Vname, string Vno)
			{
				return ((VenueRow) (this.Rows.Find(new object[] {Vname, Vno})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				VenueDataTable cln = (VenueDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new VenueDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname, this.columnVno}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow NewVenueRow()
			{
				return ((VenueRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new VenueRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(VenueRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.VenueRowChangedEvent), null))
				{
					VenueRowChangedEvent(this, new VenueRowChangeEvent((VenueRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.VenueRowChangingEvent), null))
				{
					VenueRowChangingEvent(this, new VenueRowChangeEvent((VenueRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.VenueRowDeletedEvent), null))
				{
					VenueRowDeletedEvent(this, new VenueRowChangeEvent((VenueRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.VenueRowDeletingEvent), null))
				{
					VenueRowDeletingEvent(this, new VenueRowChangeEvent((VenueRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveVenueRow(VenueRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "VenueDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class VtypeDataTable : global::System.Data.TypedTableBase<VtypeRow>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnINrental;
			
			private global::System.Data.DataColumn columnOUTrental;
			
			private global::System.Data.DataColumn columnVaddress;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeDataTable()
			{
				this.TableName = "Vtype";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal VtypeDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected VtypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn INrentalColumn
			{
				get
				{
					return this.columnINrental;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn OUTrentalColumn
			{
				get
				{
					return this.columnOUTrental;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VaddressColumn
			{
				get
				{
					return this.columnVaddress;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRow this[int index]
			{
				get
				{
					return ((VtypeRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRowChangeEventHandler VtypeRowChangingEvent;
			public event VtypeRowChangeEventHandler VtypeRowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRowChangeEventHandler VtypeRowChangedEvent;
			public event VtypeRowChangeEventHandler VtypeRowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRowChangeEventHandler VtypeRowDeletingEvent;
			public event VtypeRowChangeEventHandler VtypeRowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRowChangeEventHandler VtypeRowDeletedEvent;
			public event VtypeRowChangeEventHandler VtypeRowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddVtypeRow(VtypeRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRow AddVtypeRow(string Vname, float INrental, float OUTrental, string Vaddress)
			{
				VtypeRow rowVtypeRow = (VtypeRow) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, INrental, OUTrental, Vaddress};
				rowVtypeRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowVtypeRow);
				return rowVtypeRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRow FindByVname(string Vname)
			{
				return ((VtypeRow) (this.Rows.Find(new object[] {Vname})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				VtypeDataTable cln = (VtypeDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new VtypeDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnINrental = base.Columns["INrental"];
				this.columnOUTrental = base.Columns["OUTrental"];
				this.columnVaddress = base.Columns["Vaddress"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnINrental = new global::System.Data.DataColumn("INrental", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnINrental);
				this.columnOUTrental = new global::System.Data.DataColumn("OUTrental", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnOUTrental);
				this.columnVaddress = new global::System.Data.DataColumn("Vaddress", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVaddress);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.Unique = true;
				this.columnVname.MaxLength = 10;
				this.columnINrental.AllowDBNull = false;
				this.columnOUTrental.AllowDBNull = false;
				this.columnVaddress.AllowDBNull = false;
				this.columnVaddress.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRow NewVtypeRow()
			{
				return ((VtypeRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new VtypeRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(VtypeRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.VtypeRowChangedEvent), null))
				{
					VtypeRowChangedEvent(this, new VtypeRowChangeEvent((VtypeRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.VtypeRowChangingEvent), null))
				{
					VtypeRowChangingEvent(this, new VtypeRowChangeEvent((VtypeRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.VtypeRowDeletedEvent), null))
				{
					VtypeRowDeletedEvent(this, new VtypeRowChangeEvent((VtypeRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.VtypeRowDeletingEvent), null))
				{
					VtypeRowDeletingEvent(this, new VtypeRowChangeEvent((VtypeRow) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveVtypeRow(VtypeRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "VtypeDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Users1DataTable : global::System.Data.TypedTableBase<Users1Row>
		{
			
			private global::System.Data.DataColumn columnID;
			
			private global::System.Data.DataColumn columnUname;
			
			private global::System.Data.DataColumn columnUidentity;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1DataTable()
			{
				this.TableName = "Users1";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Users1DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Users1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn IDColumn
			{
				get
				{
					return this.columnID;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UnameColumn
			{
				get
				{
					return this.columnUname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UidentityColumn
			{
				get
				{
					return this.columnUidentity;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1Row this[int index]
			{
				get
				{
					return ((Users1Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1RowChangeEventHandler Users1RowChangingEvent;
			public event Users1RowChangeEventHandler Users1RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1RowChangeEventHandler Users1RowChangedEvent;
			public event Users1RowChangeEventHandler Users1RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1RowChangeEventHandler Users1RowDeletingEvent;
			public event Users1RowChangeEventHandler Users1RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1RowChangeEventHandler Users1RowDeletedEvent;
			public event Users1RowChangeEventHandler Users1RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddUsers1Row(Users1Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1Row AddUsers1Row(string ID, string Uname, string Uidentity)
			{
				Users1Row rowUsers1Row = (Users1Row) (this.NewRow());
				object[] columnValuesArray = new object[] {ID, Uname, Uidentity};
				rowUsers1Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowUsers1Row);
				return rowUsers1Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1Row FindByID(string ID)
			{
				return ((Users1Row) (this.Rows.Find(new object[] {ID})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Users1DataTable cln = (Users1DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Users1DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnID = base.Columns["ID"];
				this.columnUname = base.Columns["Uname"];
				this.columnUidentity = base.Columns["Uidentity"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnID);
				this.columnUname = new global::System.Data.DataColumn("Uname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUname);
				this.columnUidentity = new global::System.Data.DataColumn("Uidentity", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUidentity);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnID}, true));
				this.columnID.AllowDBNull = false;
				this.columnID.Unique = true;
				this.columnID.MaxLength = 20;
				this.columnUname.AllowDBNull = false;
				this.columnUname.MaxLength = 10;
				this.columnUidentity.AllowDBNull = false;
				this.columnUidentity.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1Row NewUsers1Row()
			{
				return ((Users1Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Users1Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Users1Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Users1RowChangedEvent), null))
				{
					Users1RowChangedEvent(this, new Users1RowChangeEvent((Users1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Users1RowChangingEvent), null))
				{
					Users1RowChangingEvent(this, new Users1RowChangeEvent((Users1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Users1RowDeletedEvent), null))
				{
					Users1RowDeletedEvent(this, new Users1RowChangeEvent((Users1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Users1RowDeletingEvent), null))
				{
					Users1RowDeletingEvent(this, new Users1RowChangeEvent((Users1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveUsers1Row(Users1Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Users1DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Lease1DataTable : global::System.Data.TypedTableBase<Lease1Row>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			private global::System.Data.DataColumn columnStime;
			
			private global::System.Data.DataColumn columnEtime;
			
			private global::System.Data.DataColumn columnCondition;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1DataTable()
			{
				this.TableName = "Lease1";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Lease1DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Lease1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn StimeColumn
			{
				get
				{
					return this.columnStime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn EtimeColumn
			{
				get
				{
					return this.columnEtime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn ConditionColumn
			{
				get
				{
					return this.columnCondition;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1Row this[int index]
			{
				get
				{
					return ((Lease1Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1RowChangeEventHandler Lease1RowChangingEvent;
			public event Lease1RowChangeEventHandler Lease1RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1RowChangeEventHandler Lease1RowChangedEvent;
			public event Lease1RowChangeEventHandler Lease1RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1RowChangeEventHandler Lease1RowDeletingEvent;
			public event Lease1RowChangeEventHandler Lease1RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1RowChangeEventHandler Lease1RowDeletedEvent;
			public event Lease1RowChangeEventHandler Lease1RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddLease1Row(Lease1Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1Row AddLease1Row(string Vname, string Vno, DateTime Stime, DateTime Etime, string Condition)
			{
				Lease1Row rowLease1Row = (Lease1Row) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, Vno, Stime, Etime, Condition};
				rowLease1Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowLease1Row);
				return rowLease1Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1Row FindByVnameVnoStime(string Vname, string Vno, DateTime Stime)
			{
				return ((Lease1Row) (this.Rows.Find(new object[] {Vname, Vno, Stime})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Lease1DataTable cln = (Lease1DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Lease1DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
				this.columnStime = base.Columns["Stime"];
				this.columnEtime = base.Columns["Etime"];
				this.columnCondition = base.Columns["Condition"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.columnStime = new global::System.Data.DataColumn("Stime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStime);
				this.columnEtime = new global::System.Data.DataColumn("Etime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEtime);
				this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCondition);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname, this.columnVno, this.columnStime}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
				this.columnStime.AllowDBNull = false;
				this.columnEtime.AllowDBNull = false;
				this.columnCondition.AllowDBNull = false;
				this.columnCondition.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1Row NewLease1Row()
			{
				return ((Lease1Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Lease1Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Lease1Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Lease1RowChangedEvent), null))
				{
					Lease1RowChangedEvent(this, new Lease1RowChangeEvent((Lease1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Lease1RowChangingEvent), null))
				{
					Lease1RowChangingEvent(this, new Lease1RowChangeEvent((Lease1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Lease1RowDeletedEvent), null))
				{
					Lease1RowDeletedEvent(this, new Lease1RowChangeEvent((Lease1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Lease1RowDeletingEvent), null))
				{
					Lease1RowDeletingEvent(this, new Lease1RowChangeEvent((Lease1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveLease1Row(Lease1Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Lease1DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Lease2DataTable : global::System.Data.TypedTableBase<Lease2Row>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			private global::System.Data.DataColumn columnStime;
			
			private global::System.Data.DataColumn columnEtime;
			
			private global::System.Data.DataColumn columnCondition;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2DataTable()
			{
				this.TableName = "Lease2";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Lease2DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Lease2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn StimeColumn
			{
				get
				{
					return this.columnStime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn EtimeColumn
			{
				get
				{
					return this.columnEtime;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn ConditionColumn
			{
				get
				{
					return this.columnCondition;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2Row this[int index]
			{
				get
				{
					return ((Lease2Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2RowChangeEventHandler Lease2RowChangingEvent;
			public event Lease2RowChangeEventHandler Lease2RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2RowChangeEventHandler Lease2RowChangedEvent;
			public event Lease2RowChangeEventHandler Lease2RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2RowChangeEventHandler Lease2RowDeletingEvent;
			public event Lease2RowChangeEventHandler Lease2RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2RowChangeEventHandler Lease2RowDeletedEvent;
			public event Lease2RowChangeEventHandler Lease2RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddLease2Row(Lease2Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2Row AddLease2Row(string Vname, string Vno, DateTime Stime, DateTime Etime, string Condition)
			{
				Lease2Row rowLease2Row = (Lease2Row) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, Vno, Stime, Etime, Condition};
				rowLease2Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowLease2Row);
				return rowLease2Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2Row FindByVnameVnoStime(string Vname, string Vno, DateTime Stime)
			{
				return ((Lease2Row) (this.Rows.Find(new object[] {Vname, Vno, Stime})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Lease2DataTable cln = (Lease2DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Lease2DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
				this.columnStime = base.Columns["Stime"];
				this.columnEtime = base.Columns["Etime"];
				this.columnCondition = base.Columns["Condition"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.columnStime = new global::System.Data.DataColumn("Stime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStime);
				this.columnEtime = new global::System.Data.DataColumn("Etime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEtime);
				this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCondition);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname, this.columnVno, this.columnStime}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
				this.columnStime.AllowDBNull = false;
				this.columnEtime.AllowDBNull = false;
				this.columnCondition.AllowDBNull = false;
				this.columnCondition.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2Row NewLease2Row()
			{
				return ((Lease2Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Lease2Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Lease2Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Lease2RowChangedEvent), null))
				{
					Lease2RowChangedEvent(this, new Lease2RowChangeEvent((Lease2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Lease2RowChangingEvent), null))
				{
					Lease2RowChangingEvent(this, new Lease2RowChangeEvent((Lease2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Lease2RowDeletedEvent), null))
				{
					Lease2RowDeletedEvent(this, new Lease2RowChangeEvent((Lease2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Lease2RowDeletingEvent), null))
				{
					Lease2RowDeletingEvent(this, new Lease2RowChangeEvent((Lease2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveLease2Row(Lease2Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Lease2DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Vtype1DataTable : global::System.Data.TypedTableBase<Vtype1Row>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnINrental;
			
			private global::System.Data.DataColumn columnOUTrental;
			
			private global::System.Data.DataColumn columnVaddress;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1DataTable()
			{
				this.TableName = "Vtype1";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Vtype1DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Vtype1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn INrentalColumn
			{
				get
				{
					return this.columnINrental;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn OUTrentalColumn
			{
				get
				{
					return this.columnOUTrental;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VaddressColumn
			{
				get
				{
					return this.columnVaddress;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1Row this[int index]
			{
				get
				{
					return ((Vtype1Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1RowChangeEventHandler Vtype1RowChangingEvent;
			public event Vtype1RowChangeEventHandler Vtype1RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1RowChangeEventHandler Vtype1RowChangedEvent;
			public event Vtype1RowChangeEventHandler Vtype1RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1RowChangeEventHandler Vtype1RowDeletingEvent;
			public event Vtype1RowChangeEventHandler Vtype1RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1RowChangeEventHandler Vtype1RowDeletedEvent;
			public event Vtype1RowChangeEventHandler Vtype1RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddVtype1Row(Vtype1Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1Row AddVtype1Row(string Vname, float INrental, float OUTrental, string Vaddress)
			{
				Vtype1Row rowVtype1Row = (Vtype1Row) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, INrental, OUTrental, Vaddress};
				rowVtype1Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowVtype1Row);
				return rowVtype1Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1Row FindByVname(string Vname)
			{
				return ((Vtype1Row) (this.Rows.Find(new object[] {Vname})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Vtype1DataTable cln = (Vtype1DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Vtype1DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnINrental = base.Columns["INrental"];
				this.columnOUTrental = base.Columns["OUTrental"];
				this.columnVaddress = base.Columns["Vaddress"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnINrental = new global::System.Data.DataColumn("INrental", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnINrental);
				this.columnOUTrental = new global::System.Data.DataColumn("OUTrental", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnOUTrental);
				this.columnVaddress = new global::System.Data.DataColumn("Vaddress", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVaddress);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.Unique = true;
				this.columnVname.MaxLength = 10;
				this.columnINrental.AllowDBNull = false;
				this.columnOUTrental.AllowDBNull = false;
				this.columnVaddress.AllowDBNull = false;
				this.columnVaddress.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1Row NewVtype1Row()
			{
				return ((Vtype1Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Vtype1Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Vtype1Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Vtype1RowChangedEvent), null))
				{
					Vtype1RowChangedEvent(this, new Vtype1RowChangeEvent((Vtype1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Vtype1RowChangingEvent), null))
				{
					Vtype1RowChangingEvent(this, new Vtype1RowChangeEvent((Vtype1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Vtype1RowDeletedEvent), null))
				{
					Vtype1RowDeletedEvent(this, new Vtype1RowChangeEvent((Vtype1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Vtype1RowDeletingEvent), null))
				{
					Vtype1RowDeletingEvent(this, new Vtype1RowChangeEvent((Vtype1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveVtype1Row(Vtype1Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Vtype1DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Venue1DataTable : global::System.Data.TypedTableBase<Venue1Row>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1DataTable()
			{
				this.TableName = "Venue1";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Venue1DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Venue1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1Row this[int index]
			{
				get
				{
					return ((Venue1Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1RowChangeEventHandler Venue1RowChangingEvent;
			public event Venue1RowChangeEventHandler Venue1RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1RowChangeEventHandler Venue1RowChangedEvent;
			public event Venue1RowChangeEventHandler Venue1RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1RowChangeEventHandler Venue1RowDeletingEvent;
			public event Venue1RowChangeEventHandler Venue1RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1RowChangeEventHandler Venue1RowDeletedEvent;
			public event Venue1RowChangeEventHandler Venue1RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddVenue1Row(Venue1Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1Row AddVenue1Row(string Vname, string Vno)
			{
				Venue1Row rowVenue1Row = (Venue1Row) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, Vno};
				rowVenue1Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowVenue1Row);
				return rowVenue1Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1Row FindByVnameVno(string Vname, string Vno)
			{
				return ((Venue1Row) (this.Rows.Find(new object[] {Vname, Vno})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Venue1DataTable cln = (Venue1DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Venue1DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname, this.columnVno}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1Row NewVenue1Row()
			{
				return ((Venue1Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Venue1Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Venue1Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Venue1RowChangedEvent), null))
				{
					Venue1RowChangedEvent(this, new Venue1RowChangeEvent((Venue1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Venue1RowChangingEvent), null))
				{
					Venue1RowChangingEvent(this, new Venue1RowChangeEvent((Venue1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Venue1RowDeletedEvent), null))
				{
					Venue1RowDeletedEvent(this, new Venue1RowChangeEvent((Venue1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Venue1RowDeletingEvent), null))
				{
					Venue1RowDeletingEvent(this, new Venue1RowChangeEvent((Venue1Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveVenue1Row(Venue1Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Venue1DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Vtype2DataTable : global::System.Data.TypedTableBase<Vtype2Row>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnINrental;
			
			private global::System.Data.DataColumn columnOUTrental;
			
			private global::System.Data.DataColumn columnVaddress;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2DataTable()
			{
				this.TableName = "Vtype2";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Vtype2DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Vtype2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn INrentalColumn
			{
				get
				{
					return this.columnINrental;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn OUTrentalColumn
			{
				get
				{
					return this.columnOUTrental;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VaddressColumn
			{
				get
				{
					return this.columnVaddress;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2Row this[int index]
			{
				get
				{
					return ((Vtype2Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2RowChangeEventHandler Vtype2RowChangingEvent;
			public event Vtype2RowChangeEventHandler Vtype2RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2RowChangeEventHandler Vtype2RowChangedEvent;
			public event Vtype2RowChangeEventHandler Vtype2RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2RowChangeEventHandler Vtype2RowDeletingEvent;
			public event Vtype2RowChangeEventHandler Vtype2RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2RowChangeEventHandler Vtype2RowDeletedEvent;
			public event Vtype2RowChangeEventHandler Vtype2RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddVtype2Row(Vtype2Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2Row AddVtype2Row(string Vname, float INrental, float OUTrental, string Vaddress)
			{
				Vtype2Row rowVtype2Row = (Vtype2Row) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, INrental, OUTrental, Vaddress};
				rowVtype2Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowVtype2Row);
				return rowVtype2Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2Row FindByVname(string Vname)
			{
				return ((Vtype2Row) (this.Rows.Find(new object[] {Vname})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Vtype2DataTable cln = (Vtype2DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Vtype2DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnINrental = base.Columns["INrental"];
				this.columnOUTrental = base.Columns["OUTrental"];
				this.columnVaddress = base.Columns["Vaddress"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnINrental = new global::System.Data.DataColumn("INrental", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnINrental);
				this.columnOUTrental = new global::System.Data.DataColumn("OUTrental", typeof(Single), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnOUTrental);
				this.columnVaddress = new global::System.Data.DataColumn("Vaddress", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVaddress);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.Unique = true;
				this.columnVname.MaxLength = 10;
				this.columnINrental.AllowDBNull = false;
				this.columnOUTrental.AllowDBNull = false;
				this.columnVaddress.AllowDBNull = false;
				this.columnVaddress.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2Row NewVtype2Row()
			{
				return ((Vtype2Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Vtype2Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Vtype2Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Vtype2RowChangedEvent), null))
				{
					Vtype2RowChangedEvent(this, new Vtype2RowChangeEvent((Vtype2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Vtype2RowChangingEvent), null))
				{
					Vtype2RowChangingEvent(this, new Vtype2RowChangeEvent((Vtype2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Vtype2RowDeletedEvent), null))
				{
					Vtype2RowDeletedEvent(this, new Vtype2RowChangeEvent((Vtype2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Vtype2RowDeletingEvent), null))
				{
					Vtype2RowDeletingEvent(this, new Vtype2RowChangeEvent((Vtype2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveVtype2Row(Vtype2Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Vtype2DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Venue2DataTable : global::System.Data.TypedTableBase<Venue2Row>
		{
			
			private global::System.Data.DataColumn columnVname;
			
			private global::System.Data.DataColumn columnVno;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2DataTable()
			{
				this.TableName = "Venue2";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Venue2DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Venue2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnameColumn
			{
				get
				{
					return this.columnVname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn VnoColumn
			{
				get
				{
					return this.columnVno;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2Row this[int index]
			{
				get
				{
					return ((Venue2Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2RowChangeEventHandler Venue2RowChangingEvent;
			public event Venue2RowChangeEventHandler Venue2RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2RowChangeEventHandler Venue2RowChangedEvent;
			public event Venue2RowChangeEventHandler Venue2RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2RowChangeEventHandler Venue2RowDeletingEvent;
			public event Venue2RowChangeEventHandler Venue2RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2RowChangeEventHandler Venue2RowDeletedEvent;
			public event Venue2RowChangeEventHandler Venue2RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddVenue2Row(Venue2Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2Row AddVenue2Row(string Vname, string Vno)
			{
				Venue2Row rowVenue2Row = (Venue2Row) (this.NewRow());
				object[] columnValuesArray = new object[] {Vname, Vno};
				rowVenue2Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowVenue2Row);
				return rowVenue2Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2Row FindByVnameVno(string Vname, string Vno)
			{
				return ((Venue2Row) (this.Rows.Find(new object[] {Vname, Vno})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Venue2DataTable cln = (Venue2DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Venue2DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnVname = base.Columns["Vname"];
				this.columnVno = base.Columns["Vno"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnVname = new global::System.Data.DataColumn("Vname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVname);
				this.columnVno = new global::System.Data.DataColumn("Vno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVno);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnVname, this.columnVno}, true));
				this.columnVname.AllowDBNull = false;
				this.columnVname.MaxLength = 10;
				this.columnVno.AllowDBNull = false;
				this.columnVno.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2Row NewVenue2Row()
			{
				return ((Venue2Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Venue2Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Venue2Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Venue2RowChangedEvent), null))
				{
					Venue2RowChangedEvent(this, new Venue2RowChangeEvent((Venue2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Venue2RowChangingEvent), null))
				{
					Venue2RowChangingEvent(this, new Venue2RowChangeEvent((Venue2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Venue2RowDeletedEvent), null))
				{
					Venue2RowDeletedEvent(this, new Venue2RowChangeEvent((Venue2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Venue2RowDeletingEvent), null))
				{
					Venue2RowDeletingEvent(this, new Venue2RowChangeEvent((Venue2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveVenue2Row(Venue2Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Venue2DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class Users2DataTable : global::System.Data.TypedTableBase<Users2Row>
		{
			
			private global::System.Data.DataColumn columnID;
			
			private global::System.Data.DataColumn columnUname;
			
			private global::System.Data.DataColumn columnUidentity;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2DataTable()
			{
				this.TableName = "Users2";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Users2DataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected Users2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn IDColumn
			{
				get
				{
					return this.columnID;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UnameColumn
			{
				get
				{
					return this.columnUname;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataColumn UidentityColumn
			{
				get
				{
					return this.columnUidentity;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2Row this[int index]
			{
				get
				{
					return ((Users2Row) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2RowChangeEventHandler Users2RowChangingEvent;
			public event Users2RowChangeEventHandler Users2RowChanging;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2RowChangeEventHandler Users2RowChangedEvent;
			public event Users2RowChangeEventHandler Users2RowChanged;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2RowChangeEventHandler Users2RowDeletingEvent;
			public event Users2RowChangeEventHandler Users2RowDeleting;
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2RowChangeEventHandler Users2RowDeletedEvent;
			public event Users2RowChangeEventHandler Users2RowDeleted;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void AddUsers2Row(Users2Row row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2Row AddUsers2Row(string ID, string Uname, string Uidentity)
			{
				Users2Row rowUsers2Row = (Users2Row) (this.NewRow());
				object[] columnValuesArray = new object[] {ID, Uname, Uidentity};
				rowUsers2Row.ItemArray = columnValuesArray;
				this.Rows.Add(rowUsers2Row);
				return rowUsers2Row;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2Row FindByID(string ID)
			{
				return ((Users2Row) (this.Rows.Find(new object[] {ID})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				Users2DataTable cln = (Users2DataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new Users2DataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal void InitVars()
			{
				this.columnID = base.Columns["ID"];
				this.columnUname = base.Columns["Uname"];
				this.columnUidentity = base.Columns["Uidentity"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitClass()
			{
				this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnID);
				this.columnUname = new global::System.Data.DataColumn("Uname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUname);
				this.columnUidentity = new global::System.Data.DataColumn("Uidentity", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUidentity);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnID}, true));
				this.columnID.AllowDBNull = false;
				this.columnID.Unique = true;
				this.columnID.MaxLength = 20;
				this.columnUname.AllowDBNull = false;
				this.columnUname.MaxLength = 10;
				this.columnUidentity.AllowDBNull = false;
				this.columnUidentity.MaxLength = 10;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2Row NewUsers2Row()
			{
				return ((Users2Row) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new Users2Row(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(Users2Row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!ReferenceEquals((this.Users2RowChangedEvent), null))
				{
					Users2RowChangedEvent(this, new Users2RowChangeEvent((Users2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!ReferenceEquals((this.Users2RowChangingEvent), null))
				{
					Users2RowChangingEvent(this, new Users2RowChangeEvent((Users2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!ReferenceEquals((this.Users2RowDeletedEvent), null))
				{
					Users2RowDeletedEvent(this, new Users2RowChangeEvent((Users2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!ReferenceEquals((this.Users2RowDeletingEvent), null))
				{
					Users2RowDeletingEvent(this, new Users2RowChangeEvent((Users2Row) e.Row, e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void RemoveUsers2Row(Users2Row row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dataDataSet ds = new dataDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "Users2DataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!ReferenceEquals((s1), null))
						{
							s1.Close();
						}
						if (!ReferenceEquals((s2), null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class LeaseRow : global::System.Data.DataRow
		{
			
			private LeaseDataTable tableLease;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal LeaseRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableLease = (LeaseDataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease.VnameColumn]);
				}
				set
				{
					this[this.tableLease.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease.VnoColumn]);
				}
				set
				{
					this[this.tableLease.VnoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Stime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableLease.StimeColumn]);
				}
				set
				{
					this[this.tableLease.StimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Etime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableLease.EtimeColumn]);
				}
				set
				{
					this[this.tableLease.EtimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Condition
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease.ConditionColumn]);
				}
				set
				{
					this[this.tableLease.ConditionColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow VenueRowParent
			{
				get
				{
					return ((VenueRow) (this.GetParentRow(this.Table.ParentRelations["FK_LEASE_租借_VENUE"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_LEASE_租借_VENUE"]);
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow[] GetOrdersRows()
			{
				if (ReferenceEquals(this.Table.ChildRelations["FK_ORDERS_ORDERS_LEASE"], null))
				{
					return new OrdersRow[0];
				}
				else
				{
					return ((OrdersRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_ORDERS_ORDERS_LEASE"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class OrdersRow : global::System.Data.DataRow
		{
			
			private OrdersDataTable tableOrders;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal OrdersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableOrders = (OrdersDataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string ID
			{
				get
				{
					return System.Convert.ToString(this[this.tableOrders.IDColumn]);
				}
				set
				{
					this[this.tableOrders.IDColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableOrders.VnameColumn]);
				}
				set
				{
					this[this.tableOrders.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableOrders.VnoColumn]);
				}
				set
				{
					this[this.tableOrders.VnoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Stime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableOrders.StimeColumn]);
				}
				set
				{
					this[this.tableOrders.StimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Etime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableOrders.EtimeColumn]);
				}
				set
				{
					this[this.tableOrders.EtimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public int Ltime
			{
				get
				{
					return System.Convert.ToInt32(this[this.tableOrders.LtimeColumn]);
				}
				set
				{
					this[this.tableOrders.LtimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float Fee
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableOrders.FeeColumn]));
				}
				set
				{
					this[this.tableOrders.FeeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Orderno
			{
				get
				{
					return System.Convert.ToString(this[this.tableOrders.OrdernoColumn]);
				}
				set
				{
					this[this.tableOrders.OrdernoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uname
			{
				get
				{
					return System.Convert.ToString(this[this.tableOrders.UnameColumn]);
				}
				set
				{
					this[this.tableOrders.UnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Remark
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tableOrders.RemarkColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("表““Orders””中列““Remark””的值为 DBNull。", e));
					}
				}
				set
				{
					this[this.tableOrders.RemarkColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow LeaseRowParent
			{
				get
				{
					return ((LeaseRow) (this.GetParentRow(this.Table.ParentRelations["FK_ORDERS_ORDERS_LEASE"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_ORDERS_ORDERS_LEASE"]);
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRow UsersRow
			{
				get
				{
					return ((UsersRow) (this.GetParentRow(this.Table.ParentRelations["FK_ORDERS_ORDERS2_USERS"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_ORDERS_ORDERS2_USERS"]);
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool IsRemarkNull()
			{
				return this.IsNull(this.tableOrders.RemarkColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public void SetRemarkNull()
			{
				this[this.tableOrders.RemarkColumn] = global::System.Convert.DBNull;
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class UsersRow : global::System.Data.DataRow
		{
			
			private UsersDataTable tableUsers;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal UsersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableUsers = (UsersDataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string ID
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers.IDColumn]);
				}
				set
				{
					this[this.tableUsers.IDColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uname
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers.UnameColumn]);
				}
				set
				{
					this[this.tableUsers.UnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uidentity
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers.UidentityColumn]);
				}
				set
				{
					this[this.tableUsers.UidentityColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Upassword
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers.UpasswordColumn]);
				}
				set
				{
					this[this.tableUsers.UpasswordColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow[] GetOrdersRows()
			{
				if (ReferenceEquals(this.Table.ChildRelations["FK_ORDERS_ORDERS2_USERS"], null))
				{
					return new OrdersRow[0];
				}
				else
				{
					return ((OrdersRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_ORDERS_ORDERS2_USERS"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class VenueRow : global::System.Data.DataRow
		{
			
			private VenueDataTable tableVenue;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal VenueRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableVenue = (VenueDataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableVenue.VnameColumn]);
				}
				set
				{
					this[this.tableVenue.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableVenue.VnoColumn]);
				}
				set
				{
					this[this.tableVenue.VnoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRow VtypeRow
			{
				get
				{
					return ((VtypeRow) (this.GetParentRow(this.Table.ParentRelations["FK_VENUE_包含_VTYPE"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_VENUE_包含_VTYPE"]);
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow[] GetLeaseRows()
			{
				if (ReferenceEquals(this.Table.ChildRelations["FK_LEASE_租借_VENUE"], null))
				{
					return new LeaseRow[0];
				}
				else
				{
					return ((LeaseRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_LEASE_租借_VENUE"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class VtypeRow : global::System.Data.DataRow
		{
			
			private VtypeDataTable tableVtype;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal VtypeRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableVtype = (VtypeDataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableVtype.VnameColumn]);
				}
				set
				{
					this[this.tableVtype.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float INrental
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableVtype.INrentalColumn]));
				}
				set
				{
					this[this.tableVtype.INrentalColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float OUTrental
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableVtype.OUTrentalColumn]));
				}
				set
				{
					this[this.tableVtype.OUTrentalColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vaddress
			{
				get
				{
					return System.Convert.ToString(this[this.tableVtype.VaddressColumn]);
				}
				set
				{
					this[this.tableVtype.VaddressColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow[] GetVenueRows()
			{
				if (ReferenceEquals(this.Table.ChildRelations["FK_VENUE_包含_VTYPE"], null))
				{
					return new VenueRow[0];
				}
				else
				{
					return ((VenueRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_VENUE_包含_VTYPE"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Users1Row : global::System.Data.DataRow
		{
			
			private Users1DataTable tableUsers1;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Users1Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableUsers1 = (Users1DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string ID
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers1.IDColumn]);
				}
				set
				{
					this[this.tableUsers1.IDColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uname
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers1.UnameColumn]);
				}
				set
				{
					this[this.tableUsers1.UnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uidentity
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers1.UidentityColumn]);
				}
				set
				{
					this[this.tableUsers1.UidentityColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Lease1Row : global::System.Data.DataRow
		{
			
			private Lease1DataTable tableLease1;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Lease1Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableLease1 = (Lease1DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease1.VnameColumn]);
				}
				set
				{
					this[this.tableLease1.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease1.VnoColumn]);
				}
				set
				{
					this[this.tableLease1.VnoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Stime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableLease1.StimeColumn]);
				}
				set
				{
					this[this.tableLease1.StimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Etime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableLease1.EtimeColumn]);
				}
				set
				{
					this[this.tableLease1.EtimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Condition
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease1.ConditionColumn]);
				}
				set
				{
					this[this.tableLease1.ConditionColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Lease2Row : global::System.Data.DataRow
		{
			
			private Lease2DataTable tableLease2;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Lease2Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableLease2 = (Lease2DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease2.VnameColumn]);
				}
				set
				{
					this[this.tableLease2.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease2.VnoColumn]);
				}
				set
				{
					this[this.tableLease2.VnoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Stime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableLease2.StimeColumn]);
				}
				set
				{
					this[this.tableLease2.StimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public DateTime Etime
			{
				get
				{
					return System.Convert.ToDateTime(this[this.tableLease2.EtimeColumn]);
				}
				set
				{
					this[this.tableLease2.EtimeColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Condition
			{
				get
				{
					return System.Convert.ToString(this[this.tableLease2.ConditionColumn]);
				}
				set
				{
					this[this.tableLease2.ConditionColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Vtype1Row : global::System.Data.DataRow
		{
			
			private Vtype1DataTable tableVtype1;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Vtype1Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableVtype1 = (Vtype1DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableVtype1.VnameColumn]);
				}
				set
				{
					this[this.tableVtype1.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float INrental
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableVtype1.INrentalColumn]));
				}
				set
				{
					this[this.tableVtype1.INrentalColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float OUTrental
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableVtype1.OUTrentalColumn]));
				}
				set
				{
					this[this.tableVtype1.OUTrentalColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vaddress
			{
				get
				{
					return System.Convert.ToString(this[this.tableVtype1.VaddressColumn]);
				}
				set
				{
					this[this.tableVtype1.VaddressColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Venue1Row : global::System.Data.DataRow
		{
			
			private Venue1DataTable tableVenue1;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Venue1Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableVenue1 = (Venue1DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableVenue1.VnameColumn]);
				}
				set
				{
					this[this.tableVenue1.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableVenue1.VnoColumn]);
				}
				set
				{
					this[this.tableVenue1.VnoColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Vtype2Row : global::System.Data.DataRow
		{
			
			private Vtype2DataTable tableVtype2;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Vtype2Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableVtype2 = (Vtype2DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableVtype2.VnameColumn]);
				}
				set
				{
					this[this.tableVtype2.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float INrental
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableVtype2.INrentalColumn]));
				}
				set
				{
					this[this.tableVtype2.INrentalColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public float OUTrental
			{
				get
				{
					return System.Convert.ToSingle( System.Convert.ToSingle(this[this.tableVtype2.OUTrentalColumn]));
				}
				set
				{
					this[this.tableVtype2.OUTrentalColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vaddress
			{
				get
				{
					return System.Convert.ToString(this[this.tableVtype2.VaddressColumn]);
				}
				set
				{
					this[this.tableVtype2.VaddressColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Venue2Row : global::System.Data.DataRow
		{
			
			private Venue2DataTable tableVenue2;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Venue2Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableVenue2 = (Venue2DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vname
			{
				get
				{
					return System.Convert.ToString(this[this.tableVenue2.VnameColumn]);
				}
				set
				{
					this[this.tableVenue2.VnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Vno
			{
				get
				{
					return System.Convert.ToString(this[this.tableVenue2.VnoColumn]);
				}
				set
				{
					this[this.tableVenue2.VnoColumn] = value;
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class Users2Row : global::System.Data.DataRow
		{
			
			private Users2DataTable tableUsers2;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal Users2Row(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableUsers2 = (Users2DataTable) this.Table;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string ID
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers2.IDColumn]);
				}
				set
				{
					this[this.tableUsers2.IDColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uname
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers2.UnameColumn]);
				}
				set
				{
					this[this.tableUsers2.UnameColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public string Uidentity
			{
				get
				{
					return System.Convert.ToString(this[this.tableUsers2.UidentityColumn]);
				}
				set
				{
					this[this.tableUsers2.UidentityColumn] = value;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class LeaseRowChangeEvent : global::System.EventArgs
		{
			
			private LeaseRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRowChangeEvent(LeaseRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class OrdersRowChangeEvent : global::System.EventArgs
		{
			
			private OrdersRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRowChangeEvent(OrdersRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class UsersRowChangeEvent : global::System.EventArgs
		{
			
			private UsersRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRowChangeEvent(UsersRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class VenueRowChangeEvent : global::System.EventArgs
		{
			
			private VenueRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRowChangeEvent(VenueRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class VtypeRowChangeEvent : global::System.EventArgs
		{
			
			private VtypeRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRowChangeEvent(VtypeRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Users1RowChangeEvent : global::System.EventArgs
		{
			
			private Users1Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1RowChangeEvent(Users1Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users1Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Lease1RowChangeEvent : global::System.EventArgs
		{
			
			private Lease1Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1RowChangeEvent(Lease1Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease1Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Lease2RowChangeEvent : global::System.EventArgs
		{
			
			private Lease2Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2RowChangeEvent(Lease2Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Lease2Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Vtype1RowChangeEvent : global::System.EventArgs
		{
			
			private Vtype1Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1RowChangeEvent(Vtype1Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype1Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Venue1RowChangeEvent : global::System.EventArgs
		{
			
			private Venue1Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1RowChangeEvent(Venue1Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue1Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Vtype2RowChangeEvent : global::System.EventArgs
		{
			
			private Vtype2Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2RowChangeEvent(Vtype2Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Vtype2Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Venue2RowChangeEvent : global::System.EventArgs
		{
			
			private Venue2Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2RowChangeEvent(Venue2Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Venue2Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public class Users2RowChangeEvent : global::System.EventArgs
		{
			
			private Users2Row eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2RowChangeEvent(Users2Row row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public Users2Row Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}
	
	namespace dataDataSetTableAdapters
	{
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class LeaseTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public LeaseTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (ReferenceEquals(this._adapter, null))
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
				set { Adapter = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (ReferenceEquals(this._connection, null))
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!ReferenceEquals((this.Adapter.InsertCommand), null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.DeleteCommand), null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.UpdateCommand), null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!ReferenceEquals((this.CommandCollection[i]), null))
						{
							this.CommandCollection[i].Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.DeleteCommand), null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.InsertCommand), null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.UpdateCommand), null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (ReferenceEquals(this._commandCollection, null))
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
				set { CommandCollection = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Lease";
				tableMapping.ColumnMappings.Add("Vname", "Vname");
				tableMapping.ColumnMappings.Add("Vno", "Vno");
				tableMapping.ColumnMappings.Add("Stime", "Stime");
				tableMapping.ColumnMappings.Add("Etime", "Etime");
				tableMapping.ColumnMappings.Add("Condition", "Condition");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Lease] WHERE (([Vname] = @Original_Vname) AND ([Vno] = @Origin" + 
					"al_Vno) AND ([Stime] = @Original_Stime) AND ([Etime] = @Original_Etime) AND ([Co" + 
					"ndition] = @Original_Condition))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Condition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Lease] ([Vname], [Vno], [Stime], [Etime], [Condition]) VALUES " + 
					"(@Vname, @Vno, @Stime, @Etime, @Condition);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT Vname, Vno, Stime, Etime, Co" + 
					"ndition FROM Lease WHERE (Stime = @Stime) AND (Vname = @Vname) AND (Vno = @Vno)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Lease] SET [Vname] = @Vname, [Vno] = @Vno, [Stime] = @Stime, [Etime" + 
					"] = @Etime, [Condition] = @Condition WHERE (([Vname] = @Original_Vname) AND ([Vn" + 
					"o] = @Original_Vno) AND ([Stime] = @Original_Stime) AND ([Etime] = @Original_Eti" + 
					"me) AND ([Condition] = @Original_Condition));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT Vname, Vno, Stime, Etime, " + 
					"Condition FROM Lease WHERE (Stime = @Stime) AND (Vname = @Vname) AND (Vno = @Vno" + 
					")";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Condition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::WindowsApp1.My.Settings.Default.dataConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT Vname, Vno, Stime, Etime, Condition FROM dbo.Lease";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dataDataSet.LeaseDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dataDataSet.LeaseDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dataDataSet.LeaseDataTable dataTable = new dataDataSet.LeaseDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet.LeaseDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet dataSet)
			{
				return this.Adapter.Update(dataSet, "Lease");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(string Original_Vname, string Original_Vno, DateTime Original_Stime, DateTime Original_Etime, string Original_Condition)
			{
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToString(Original_Vname);
				}
				if (ReferenceEquals(Original_Vno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vno"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_Vno);
				}
				this.Adapter.DeleteCommand.Parameters[2].Value = System.Convert.ToDateTime(Original_Stime);
				this.Adapter.DeleteCommand.Parameters[3].Value = System.Convert.ToDateTime(Original_Etime);
				if (ReferenceEquals(Original_Condition, null))
				{
					throw (new global::System.ArgumentNullException("Original_Condition"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[4].Value = System.Convert.ToString(Original_Condition);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if (((int) (this.Adapter.DeleteCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string Vname, string Vno, DateTime Stime, DateTime Etime, string Condition)
			{
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(Vname);
				}
				if (ReferenceEquals(Vno, null))
				{
					throw (new global::System.ArgumentNullException("Vno"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToString(Vno);
				}
				this.Adapter.InsertCommand.Parameters[2].Value = System.Convert.ToDateTime(Stime);
				this.Adapter.InsertCommand.Parameters[3].Value = System.Convert.ToDateTime(Etime);
				if (ReferenceEquals(Condition, null))
				{
					throw (new global::System.ArgumentNullException("Condition"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = System.Convert.ToString(Condition);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if (((int) (this.Adapter.InsertCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string Vname, string Vno, DateTime Stime, DateTime Etime, string Condition, string Original_Vname, string Original_Vno, DateTime Original_Stime, DateTime Original_Etime, string Original_Condition)
			{
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(Vname);
				}
				if (ReferenceEquals(Vno, null))
				{
					throw (new global::System.ArgumentNullException("Vno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToString(Vno);
				}
				this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToDateTime(Stime);
				this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToDateTime(Etime);
				if (ReferenceEquals(Condition, null))
				{
					throw (new global::System.ArgumentNullException("Condition"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToString(Condition);
				}
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = System.Convert.ToString(Original_Vname);
				}
				if (ReferenceEquals(Original_Vno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = System.Convert.ToString(Original_Vno);
				}
				this.Adapter.UpdateCommand.Parameters[7].Value = System.Convert.ToDateTime(Original_Stime);
				this.Adapter.UpdateCommand.Parameters[8].Value = System.Convert.ToDateTime(Original_Etime);
				if (ReferenceEquals(Original_Condition, null))
				{
					throw (new global::System.ArgumentNullException("Original_Condition"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = System.Convert.ToString(Original_Condition);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if (((int) (this.Adapter.UpdateCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(DateTime Etime, string Condition, string Original_Vname, string Original_Vno, DateTime Original_Stime, DateTime Original_Etime, string Original_Condition)
			{
				return this.Update(Original_Vname, Original_Vno, Original_Stime, Etime, Condition, Original_Vname, Original_Vno, Original_Stime, Original_Etime, Original_Condition);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class OrdersTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public OrdersTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (ReferenceEquals(this._adapter, null))
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
				set { Adapter = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (ReferenceEquals(this._connection, null))
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!ReferenceEquals((this.Adapter.InsertCommand), null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.DeleteCommand), null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.UpdateCommand), null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!ReferenceEquals((this.CommandCollection[i]), null))
						{
							this.CommandCollection[i].Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.DeleteCommand), null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.InsertCommand), null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.UpdateCommand), null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (ReferenceEquals(this._commandCollection, null))
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
				set { CommandCollection = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Orders";
				tableMapping.ColumnMappings.Add("ID", "ID");
				tableMapping.ColumnMappings.Add("Vname", "Vname");
				tableMapping.ColumnMappings.Add("Vno", "Vno");
				tableMapping.ColumnMappings.Add("Stime", "Stime");
				tableMapping.ColumnMappings.Add("Etime", "Etime");
				tableMapping.ColumnMappings.Add("Ltime", "Ltime");
				tableMapping.ColumnMappings.Add("Fee", "Fee");
				tableMapping.ColumnMappings.Add("Orderno", "Orderno");
				tableMapping.ColumnMappings.Add("Uname", "Uname");
				tableMapping.ColumnMappings.Add("Remark", "Remark");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Orders] WHERE (([ID] = @Original_ID) AND ([Vname] = @Original_" + 
					"Vname) AND ([Vno] = @Original_Vno) AND ([Stime] = @Original_Stime) AND ([Etime] " + 
					"= @Original_Etime) AND ([Ltime] = @Original_Ltime) AND ([Fee] = @Original_Fee) A" + 
					"ND ([Orderno] = @Original_Orderno) AND ([Uname] = @Original_Uname) AND ((@IsNull" + 
					"_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ltime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Ltime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fee", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Orderno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Orderno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Orders] ([ID], [Vname], [Vno], [Stime], [Etime], [Ltime], [Fee" + 
					"], [Orderno], [Uname], [Remark]) VALUES (@ID, @Vname, @Vno, @Stime, @Etime, @Lti" + 
					"me, @Fee, @Orderno, @Uname, @Remark);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT ID, Vname, Vno, Stime, Etime, Ltim" + 
					"e, Fee, Orderno, Uname, Remark FROM Orders WHERE (ID = @ID) AND (Stime = @Stime)" + 
					" AND (Vname = @Vname) AND (Vno = @Vno)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ltime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Ltime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orderno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Orderno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Orders] SET [ID] = @ID, [Vname] = @Vname, [Vno] = @Vno, [Stime] = @" + 
					"Stime, [Etime] = @Etime, [Ltime] = @Ltime, [Fee] = @Fee, [Orderno] = @Orderno, [" + 
					"Uname] = @Uname, [Remark] = @Remark WHERE (([ID] = @Original_ID) AND ([Vname] = " + 
					"@Original_Vname) AND ([Vno] = @Original_Vno) AND ([Stime] = @Original_Stime) AND" + 
					" ([Etime] = @Original_Etime) AND ([Ltime] = @Original_Ltime) AND ([Fee] = @Origi" + 
					"nal_Fee) AND ([Orderno] = @Original_Orderno) AND ([Uname] = @Original_Uname) AND" + 
					" ((@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT ID, Vname, Vno, Stime, Etime, Ltime, Fee, Orderno, Uname, Remark FROM Or" + 
					"ders WHERE (ID = @ID) AND (Stime = @Stime) AND (Vname = @Vname) AND (Vno = @Vno)" + 
					"";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ltime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Ltime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orderno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Orderno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Stime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Etime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ltime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Ltime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fee", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Orderno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Orderno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::WindowsApp1.My.Settings.Default.dataConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT ID, Vname, Vno, Stime, Etime, Ltime, Fee, Orderno, Uname, Remark FROM dbo." + 
					"Orders";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dataDataSet.OrdersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dataDataSet.OrdersDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dataDataSet.OrdersDataTable dataTable = new dataDataSet.OrdersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet.OrdersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet dataSet)
			{
				return this.Adapter.Update(dataSet, "Orders");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(string Original_ID, string Original_Vname, string Original_Vno, DateTime Original_Stime, DateTime Original_Etime, int Original_Ltime, float Original_Fee, string Original_Orderno, string Original_Uname, string Original_Remark)
			{
				if (ReferenceEquals(Original_ID, null))
				{
					throw (new global::System.ArgumentNullException("Original_ID"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToString(Original_ID);
				}
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_Vname);
				}
				if (ReferenceEquals(Original_Vno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vno"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = System.Convert.ToString(Original_Vno);
				}
				this.Adapter.DeleteCommand.Parameters[3].Value = System.Convert.ToDateTime(Original_Stime);
				this.Adapter.DeleteCommand.Parameters[4].Value = System.Convert.ToDateTime(Original_Etime);
				this.Adapter.DeleteCommand.Parameters[5].Value = System.Convert.ToInt32(Original_Ltime);
				this.Adapter.DeleteCommand.Parameters[6].Value = System.Convert.ToSingle(Original_Fee);
				if (ReferenceEquals(Original_Orderno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Orderno"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[7].Value = System.Convert.ToString(Original_Orderno);
				}
				if (ReferenceEquals(Original_Uname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Uname"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[8].Value = System.Convert.ToString(Original_Uname);
				}
				if (ReferenceEquals(Original_Remark, null))
				{
					this.Adapter.DeleteCommand.Parameters[9].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[9].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[10].Value = System.Convert.ToString(Original_Remark);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if (((int) (this.Adapter.DeleteCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string ID, string Vname, string Vno, DateTime Stime, DateTime Etime, int Ltime, float Fee, string Orderno, string Uname, string Remark)
			{
				if (ReferenceEquals(ID, null))
				{
					throw (new global::System.ArgumentNullException("ID"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(ID);
				}
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToString(Vname);
				}
				if (ReferenceEquals(Vno, null))
				{
					throw (new global::System.ArgumentNullException("Vno"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = System.Convert.ToString(Vno);
				}
				this.Adapter.InsertCommand.Parameters[3].Value = System.Convert.ToDateTime(Stime);
				this.Adapter.InsertCommand.Parameters[4].Value = System.Convert.ToDateTime(Etime);
				this.Adapter.InsertCommand.Parameters[5].Value = System.Convert.ToInt32(Ltime);
				this.Adapter.InsertCommand.Parameters[6].Value = System.Convert.ToSingle(Fee);
				if (ReferenceEquals(Orderno, null))
				{
					throw (new global::System.ArgumentNullException("Orderno"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = System.Convert.ToString(Orderno);
				}
				if (ReferenceEquals(Uname, null))
				{
					throw (new global::System.ArgumentNullException("Uname"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = System.Convert.ToString(Uname);
				}
				if (ReferenceEquals(Remark, null))
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = System.Convert.ToString(Remark);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if (((int) (this.Adapter.InsertCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string ID, string Vname, string Vno, DateTime Stime, DateTime Etime, int Ltime, float Fee, string Orderno, string Uname, string Remark, string Original_ID, string Original_Vname, string Original_Vno, DateTime Original_Stime, DateTime Original_Etime, int Original_Ltime, float Original_Fee, string Original_Orderno, string Original_Uname, string Original_Remark)
			{
				if (ReferenceEquals(ID, null))
				{
					throw (new global::System.ArgumentNullException("ID"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(ID);
				}
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToString(Vname);
				}
				if (ReferenceEquals(Vno, null))
				{
					throw (new global::System.ArgumentNullException("Vno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToString(Vno);
				}
				this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToDateTime(Stime);
				this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToDateTime(Etime);
				this.Adapter.UpdateCommand.Parameters[5].Value = System.Convert.ToInt32(Ltime);
				this.Adapter.UpdateCommand.Parameters[6].Value = System.Convert.ToSingle(Fee);
				if (ReferenceEquals(Orderno, null))
				{
					throw (new global::System.ArgumentNullException("Orderno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = System.Convert.ToString(Orderno);
				}
				if (ReferenceEquals(Uname, null))
				{
					throw (new global::System.ArgumentNullException("Uname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = System.Convert.ToString(Uname);
				}
				if (ReferenceEquals(Remark, null))
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = System.Convert.ToString(Remark);
				}
				if (ReferenceEquals(Original_ID, null))
				{
					throw (new global::System.ArgumentNullException("Original_ID"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = System.Convert.ToString(Original_ID);
				}
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = System.Convert.ToString(Original_Vname);
				}
				if (ReferenceEquals(Original_Vno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = System.Convert.ToString(Original_Vno);
				}
				this.Adapter.UpdateCommand.Parameters[13].Value = System.Convert.ToDateTime(Original_Stime);
				this.Adapter.UpdateCommand.Parameters[14].Value = System.Convert.ToDateTime(Original_Etime);
				this.Adapter.UpdateCommand.Parameters[15].Value = System.Convert.ToInt32(Original_Ltime);
				this.Adapter.UpdateCommand.Parameters[16].Value = System.Convert.ToSingle(Original_Fee);
				if (ReferenceEquals(Original_Orderno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Orderno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = System.Convert.ToString(Original_Orderno);
				}
				if (ReferenceEquals(Original_Uname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Uname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = System.Convert.ToString(Original_Uname);
				}
				if (ReferenceEquals(Original_Remark, null))
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[20].Value = System.Convert.ToString(Original_Remark);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if (((int) (this.Adapter.UpdateCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(DateTime Etime, int Ltime, float Fee, string Orderno, string Uname, string Remark, string Original_ID, string Original_Vname, string Original_Vno, DateTime Original_Stime, DateTime Original_Etime, int Original_Ltime, float Original_Fee, string Original_Orderno, string Original_Uname, string Original_Remark)
			{
				return this.Update(Original_ID, Original_Vname, Original_Vno, Original_Stime, Etime, Ltime, Fee, Orderno, Uname, Remark, Original_ID, Original_Vname, Original_Vno, Original_Stime, Original_Etime, Original_Ltime, Original_Fee, Original_Orderno, Original_Uname, Original_Remark);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class UsersTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UsersTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (ReferenceEquals(this._adapter, null))
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
				set { Adapter = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (ReferenceEquals(this._connection, null))
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!ReferenceEquals((this.Adapter.InsertCommand), null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.DeleteCommand), null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.UpdateCommand), null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!ReferenceEquals((this.CommandCollection[i]), null))
						{
							this.CommandCollection[i].Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.DeleteCommand), null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.InsertCommand), null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.UpdateCommand), null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (ReferenceEquals(this._commandCollection, null))
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
				set { CommandCollection = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Users";
				tableMapping.ColumnMappings.Add("ID", "ID");
				tableMapping.ColumnMappings.Add("Uname", "Uname");
				tableMapping.ColumnMappings.Add("Uidentity", "Uidentity");
				tableMapping.ColumnMappings.Add("Upassword", "Upassword");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Users] WHERE (([ID] = @Original_ID) AND ([Uname] = @Original_U" + 
					"name) AND ([Uidentity] = @Original_Uidentity) AND ([Upassword] = @Original_Upass" + 
					"word))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uidentity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uidentity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Upassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Upassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Users] ([ID], [Uname], [Uidentity], [Upassword]) VALUES (@ID, " + 
					"@Uname, @Uidentity, @Upassword);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT ID, Uname, Uidentity, Upassword FROM Us" + 
					"ers WHERE (ID = @ID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uidentity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uidentity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Upassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Upassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Users] SET [ID] = @ID, [Uname] = @Uname, [Uidentity] = @Uidentity, " + 
					"[Upassword] = @Upassword WHERE (([ID] = @Original_ID) AND ([Uname] = @Original_U" + 
					"name) AND ([Uidentity] = @Original_Uidentity) AND ([Upassword] = @Original_Upass" + 
					"word));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT ID, Uname, Uidentity, Upassword FROM Users WHERE (ID = @ID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uidentity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uidentity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Upassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Upassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uidentity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Uidentity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Upassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Upassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::WindowsApp1.My.Settings.Default.dataConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT ID, Uname, Uidentity, Upassword FROM dbo.Users";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dataDataSet.UsersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dataDataSet.UsersDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dataDataSet.UsersDataTable dataTable = new dataDataSet.UsersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet.UsersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet dataSet)
			{
				return this.Adapter.Update(dataSet, "Users");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(string Original_ID, string Original_Uname, string Original_Uidentity, string Original_Upassword)
			{
				if (ReferenceEquals(Original_ID, null))
				{
					throw (new global::System.ArgumentNullException("Original_ID"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToString(Original_ID);
				}
				if (ReferenceEquals(Original_Uname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Uname"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_Uname);
				}
				if (ReferenceEquals(Original_Uidentity, null))
				{
					throw (new global::System.ArgumentNullException("Original_Uidentity"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = System.Convert.ToString(Original_Uidentity);
				}
				if (ReferenceEquals(Original_Upassword, null))
				{
					throw (new global::System.ArgumentNullException("Original_Upassword"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[3].Value = System.Convert.ToString(Original_Upassword);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if (((int) (this.Adapter.DeleteCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string ID, string Uname, string Uidentity, string Upassword)
			{
				if (ReferenceEquals(ID, null))
				{
					throw (new global::System.ArgumentNullException("ID"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(ID);
				}
				if (ReferenceEquals(Uname, null))
				{
					throw (new global::System.ArgumentNullException("Uname"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToString(Uname);
				}
				if (ReferenceEquals(Uidentity, null))
				{
					throw (new global::System.ArgumentNullException("Uidentity"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = System.Convert.ToString(Uidentity);
				}
				if (ReferenceEquals(Upassword, null))
				{
					throw (new global::System.ArgumentNullException("Upassword"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = System.Convert.ToString(Upassword);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if (((int) (this.Adapter.InsertCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string ID, string Uname, string Uidentity, string Upassword, string Original_ID, string Original_Uname, string Original_Uidentity, string Original_Upassword)
			{
				if (ReferenceEquals(ID, null))
				{
					throw (new global::System.ArgumentNullException("ID"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(ID);
				}
				if (ReferenceEquals(Uname, null))
				{
					throw (new global::System.ArgumentNullException("Uname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToString(Uname);
				}
				if (ReferenceEquals(Uidentity, null))
				{
					throw (new global::System.ArgumentNullException("Uidentity"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToString(Uidentity);
				}
				if (ReferenceEquals(Upassword, null))
				{
					throw (new global::System.ArgumentNullException("Upassword"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToString(Upassword);
				}
				if (ReferenceEquals(Original_ID, null))
				{
					throw (new global::System.ArgumentNullException("Original_ID"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToString(Original_ID);
				}
				if (ReferenceEquals(Original_Uname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Uname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = System.Convert.ToString(Original_Uname);
				}
				if (ReferenceEquals(Original_Uidentity, null))
				{
					throw (new global::System.ArgumentNullException("Original_Uidentity"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = System.Convert.ToString(Original_Uidentity);
				}
				if (ReferenceEquals(Original_Upassword, null))
				{
					throw (new global::System.ArgumentNullException("Original_Upassword"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = System.Convert.ToString(Original_Upassword);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if (((int) (this.Adapter.UpdateCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string Uname, string Uidentity, string Upassword, string Original_ID, string Original_Uname, string Original_Uidentity, string Original_Upassword)
			{
				return this.Update(Original_ID, Uname, Uidentity, Upassword, Original_ID, Original_Uname, Original_Uidentity, Original_Upassword);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class VenueTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VenueTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (ReferenceEquals(this._adapter, null))
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
				set { Adapter = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (ReferenceEquals(this._connection, null))
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!ReferenceEquals((this.Adapter.InsertCommand), null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.DeleteCommand), null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.UpdateCommand), null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!ReferenceEquals((this.CommandCollection[i]), null))
						{
							this.CommandCollection[i].Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.DeleteCommand), null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.InsertCommand), null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.UpdateCommand), null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (ReferenceEquals(this._commandCollection, null))
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
				set { CommandCollection = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Venue";
				tableMapping.ColumnMappings.Add("Vname", "Vname");
				tableMapping.ColumnMappings.Add("Vno", "Vno");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Venue] WHERE (([Vname] = @Original_Vname) AND ([Vno] = @Origin" + 
					"al_Vno))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Venue] ([Vname], [Vno]) VALUES (@Vname, @Vno);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT Vname, " + 
					"Vno FROM Venue WHERE (Vname = @Vname) AND (Vno = @Vno)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Venue] SET [Vname] = @Vname, [Vno] = @Vno WHERE (([Vname] = @Origin" + 
					"al_Vname) AND ([Vno] = @Original_Vno));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT Vname, Vno FROM Venue WHERE (Vna" + 
					"me = @Vname) AND (Vno = @Vno)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::WindowsApp1.My.Settings.Default.dataConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT Vname, Vno FROM dbo.Venue";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dataDataSet.VenueDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dataDataSet.VenueDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dataDataSet.VenueDataTable dataTable = new dataDataSet.VenueDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet.VenueDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet dataSet)
			{
				return this.Adapter.Update(dataSet, "Venue");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(string Original_Vname, string Original_Vno)
			{
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToString(Original_Vname);
				}
				if (ReferenceEquals(Original_Vno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vno"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_Vno);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if (((int) (this.Adapter.DeleteCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string Vname, string Vno)
			{
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(Vname);
				}
				if (ReferenceEquals(Vno, null))
				{
					throw (new global::System.ArgumentNullException("Vno"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToString(Vno);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if (((int) (this.Adapter.InsertCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string Vname, string Vno, string Original_Vname, string Original_Vno)
			{
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(Vname);
				}
				if (ReferenceEquals(Vno, null))
				{
					throw (new global::System.ArgumentNullException("Vno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToString(Vno);
				}
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToString(Original_Vname);
				}
				if (ReferenceEquals(Original_Vno, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vno"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToString(Original_Vno);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if (((int) (this.Adapter.UpdateCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string Original_Vname, string Original_Vno)
			{
				return this.Update(Original_Vname, Original_Vno, Original_Vname, Original_Vno);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class VtypeTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public VtypeTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (ReferenceEquals(this._adapter, null))
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
				set { Adapter = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (ReferenceEquals(this._connection, null))
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!ReferenceEquals((this.Adapter.InsertCommand), null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.DeleteCommand), null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!ReferenceEquals((this.Adapter.UpdateCommand), null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!ReferenceEquals((this.CommandCollection[i]), null))
						{
							this.CommandCollection[i].Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.DeleteCommand), null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.InsertCommand), null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!ReferenceEquals((this.Adapter), null)) 
						&& (!ReferenceEquals((this.Adapter.UpdateCommand), null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (ReferenceEquals(this._commandCollection, null))
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
				set { CommandCollection = value; }
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Vtype";
				tableMapping.ColumnMappings.Add("Vname", "Vname");
				tableMapping.ColumnMappings.Add("INrental", "INrental");
				tableMapping.ColumnMappings.Add("OUTrental", "OUTrental");
				tableMapping.ColumnMappings.Add("Vaddress", "Vaddress");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Vtype] WHERE (([Vname] = @Original_Vname) AND ([INrental] = @O" + 
					"riginal_INrental) AND ([OUTrental] = @Original_OUTrental) AND ([Vaddress] = @Ori" + 
					"ginal_Vaddress))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "INrental", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "OUTrental", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vaddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Vtype] ([Vname], [INrental], [OUTrental], [Vaddress]) VALUES (" + 
					"@Vname, @INrental, @OUTrental, @Vaddress);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT Vname, INrental, OUTrental, V" + 
					"address FROM Vtype WHERE (Vname = @Vname)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "INrental", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "OUTrental", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Vtype] SET [Vname] = @Vname, [INrental] = @INrental, [OUTrental] = " + 
					"@OUTrental, [Vaddress] = @Vaddress WHERE (([Vname] = @Original_Vname) AND ([INre" + 
					"ntal] = @Original_INrental) AND ([OUTrental] = @Original_OUTrental) AND ([Vaddre" + 
					"ss] = @Original_Vaddress));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT Vname, INrental, OUTrental, Vaddress FROM Vt" + 
					"ype WHERE (Vname = @Vname)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "INrental", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "OUTrental", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "INrental", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTrental", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "OUTrental", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "Vaddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::WindowsApp1.My.Settings.Default.dataConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT Vname, INrental, OUTrental, Vaddress FROM dbo.Vtype";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dataDataSet.VtypeDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dataDataSet.VtypeDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dataDataSet.VtypeDataTable dataTable = new dataDataSet.VtypeDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet.VtypeDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dataDataSet dataSet)
			{
				return this.Adapter.Update(dataSet, "Vtype");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(string Original_Vname, float Original_INrental, float Original_OUTrental, string Original_Vaddress)
			{
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToString(Original_Vname);
				}
				this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToSingle(Original_INrental);
				this.Adapter.DeleteCommand.Parameters[2].Value = System.Convert.ToSingle(Original_OUTrental);
				if (ReferenceEquals(Original_Vaddress, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vaddress"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[3].Value = System.Convert.ToString(Original_Vaddress);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if (((int) (this.Adapter.DeleteCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string Vname, float INrental, float OUTrental, string Vaddress)
			{
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(Vname);
				}
				this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToSingle(INrental);
				this.Adapter.InsertCommand.Parameters[2].Value = System.Convert.ToSingle(OUTrental);
				if (ReferenceEquals(Vaddress, null))
				{
					throw (new global::System.ArgumentNullException("Vaddress"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = System.Convert.ToString(Vaddress);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if (((int) (this.Adapter.InsertCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string Vname, float INrental, float OUTrental, string Vaddress, string Original_Vname, float Original_INrental, float Original_OUTrental, string Original_Vaddress)
			{
				if (ReferenceEquals(Vname, null))
				{
					throw (new global::System.ArgumentNullException("Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(Vname);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToSingle(INrental);
				this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToSingle(OUTrental);
				if (ReferenceEquals(Vaddress, null))
				{
					throw (new global::System.ArgumentNullException("Vaddress"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToString(Vaddress);
				}
				if (ReferenceEquals(Original_Vname, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vname"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToString(Original_Vname);
				}
				this.Adapter.UpdateCommand.Parameters[5].Value = System.Convert.ToSingle(Original_INrental);
				this.Adapter.UpdateCommand.Parameters[6].Value = System.Convert.ToSingle(Original_OUTrental);
				if (ReferenceEquals(Original_Vaddress, null))
				{
					throw (new global::System.ArgumentNullException("Original_Vaddress"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = System.Convert.ToString(Original_Vaddress);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if (((int) (this.Adapter.UpdateCommand.Connection.State) & (int) global::System.Data.ConnectionState.Open) 
					!= (int) global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(float INrental, float OUTrental, string Vaddress, string Original_Vname, float Original_INrental, float Original_OUTrental, string Original_Vaddress)
			{
				return this.Update(Original_Vname, INrental, OUTrental, Vaddress, Original_Vname, Original_INrental, Original_OUTrental, Original_Vaddress);
			}
		}
		
		///<summary>
		///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" + 
		"esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]public 
		partial class TableAdapterManager : global::System.ComponentModel.Component
		{
			
			private UpdateOrderOption _updateOrder;
			
			private LeaseTableAdapter _leaseTableAdapter;
			
			private OrdersTableAdapter _ordersTableAdapter;
			
			private UsersTableAdapter _usersTableAdapter;
			
			private VenueTableAdapter _venueTableAdapter;
			
			private VtypeTableAdapter _vtypeTableAdapter;
			
			private bool _backupDataSetBeforeUpdate;
			
			private global::System.Data.IDbConnection _connection;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public UpdateOrderOption UpdateOrder
			{
				get
				{
					return this._updateOrder;
				}
				set
				{
					this._updateOrder = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
			"a", "System.Drawing.Design.UITypeEditor")]public LeaseTableAdapter LeaseTableAdapter
			{
				get
				{
					return this._leaseTableAdapter;
				}
				set
				{
					this._leaseTableAdapter = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
			"a", "System.Drawing.Design.UITypeEditor")]public OrdersTableAdapter OrdersTableAdapter
			{
				get
				{
					return this._ordersTableAdapter;
				}
				set
				{
					this._ordersTableAdapter = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
			"a", "System.Drawing.Design.UITypeEditor")]public UsersTableAdapter UsersTableAdapter
			{
				get
				{
					return this._usersTableAdapter;
				}
				set
				{
					this._usersTableAdapter = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
			"a", "System.Drawing.Design.UITypeEditor")]public VenueTableAdapter VenueTableAdapter
			{
				get
				{
					return this._venueTableAdapter;
				}
				set
				{
					this._venueTableAdapter = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
			"a", "System.Drawing.Design.UITypeEditor")]public VtypeTableAdapter VtypeTableAdapter
			{
				get
				{
					return this._vtypeTableAdapter;
				}
				set
				{
					this._vtypeTableAdapter = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public bool BackupDataSetBeforeUpdate
			{
				get
				{
					return this._backupDataSetBeforeUpdate;
				}
				set
				{
					this._backupDataSetBeforeUpdate = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public global::System.Data.IDbConnection Connection
			{
				get
				{
					if (!ReferenceEquals((this._connection), null))
					{
						return this._connection;
					}
					if ((!ReferenceEquals((this._leaseTableAdapter), null)) 
						&& (!ReferenceEquals((this._leaseTableAdapter.Connection), null)))
					{
						return this._leaseTableAdapter.Connection;
					}
					if ((!ReferenceEquals((this._ordersTableAdapter), null)) 
						&& (!ReferenceEquals((this._ordersTableAdapter.Connection), null)))
					{
						return this._ordersTableAdapter.Connection;
					}
					if ((!ReferenceEquals((this._usersTableAdapter), null)) 
						&& (!ReferenceEquals((this._usersTableAdapter.Connection), null)))
					{
						return this._usersTableAdapter.Connection;
					}
					if ((!ReferenceEquals((this._venueTableAdapter), null)) 
						&& (!ReferenceEquals((this._venueTableAdapter.Connection), null)))
					{
						return this._venueTableAdapter.Connection;
					}
					if ((!ReferenceEquals((this._vtypeTableAdapter), null)) 
						&& (!ReferenceEquals((this._vtypeTableAdapter.Connection), null)))
					{
						return this._vtypeTableAdapter.Connection;
					}
					return null;
				}
				set
				{
					this._connection = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), 
			global::System.ComponentModel.Browsable(false)]public int TableAdapterInstanceCount
			{
				get
				{
					int count = 0;
					if (!ReferenceEquals((this._leaseTableAdapter), null))
					{
						count = count + 1;
					}
					if (!ReferenceEquals((this._ordersTableAdapter), null))
					{
						count = count + 1;
					}
					if (!ReferenceEquals((this._usersTableAdapter), null))
					{
						count = count + 1;
					}
					if (!ReferenceEquals((this._venueTableAdapter), null))
					{
						count = count + 1;
					}
					if (!ReferenceEquals((this._vtypeTableAdapter), null))
					{
						count = count + 1;
					}
					return count;
				}
			}
			
			///<summary>
			///Update rows in top-down order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private int UpdateUpdatedRows(dataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				int result = 0;
				if (!ReferenceEquals((this._vtypeTableAdapter), null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.Vtype.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!ReferenceEquals((updatedRows), null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._vtypeTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!ReferenceEquals((this._venueTableAdapter), null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.Venue.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!ReferenceEquals((updatedRows), null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._venueTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!ReferenceEquals((this._leaseTableAdapter), null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.Lease.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!ReferenceEquals((updatedRows), null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._leaseTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!ReferenceEquals((this._usersTableAdapter), null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!ReferenceEquals((updatedRows), null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._usersTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!ReferenceEquals((this._ordersTableAdapter), null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.Orders.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!ReferenceEquals((updatedRows), null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._ordersTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Insert rows in top-down order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private int UpdateInsertedRows(dataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				int result = 0;
				if (!ReferenceEquals((this._vtypeTableAdapter), null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.Vtype.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!ReferenceEquals((addedRows), null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._vtypeTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!ReferenceEquals((this._venueTableAdapter), null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.Venue.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!ReferenceEquals((addedRows), null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._venueTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!ReferenceEquals((this._leaseTableAdapter), null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.Lease.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!ReferenceEquals((addedRows), null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._leaseTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!ReferenceEquals((this._usersTableAdapter), null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!ReferenceEquals((addedRows), null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._usersTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!ReferenceEquals((this._ordersTableAdapter), null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.Orders.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!ReferenceEquals((addedRows), null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._ordersTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Delete rows in bottom-up order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private int UpdateDeletedRows(dataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
			{
				int result = 0;
				if (!ReferenceEquals((this._ordersTableAdapter), null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.Orders.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!ReferenceEquals((deletedRows), null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._ordersTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!ReferenceEquals((this._usersTableAdapter), null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!ReferenceEquals((deletedRows), null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._usersTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!ReferenceEquals((this._leaseTableAdapter), null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.Lease.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!ReferenceEquals((deletedRows), null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._leaseTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!ReferenceEquals((this._venueTableAdapter), null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.Venue.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!ReferenceEquals((deletedRows), null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._venueTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!ReferenceEquals((this._vtypeTableAdapter), null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.Vtype.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!ReferenceEquals((deletedRows), null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._vtypeTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				if ((ReferenceEquals(updatedRows, null)) 
					|| (updatedRows.Length < 1))
				{
					return updatedRows;
				}
				if ((ReferenceEquals(allAddedRows, null)) 
					|| (allAddedRows.Count < 1))
				{
					return updatedRows;
				}
				global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				int i = 0;
				while (i < updatedRows.Length)
				{
					global::System.Data.DataRow row = updatedRows[i];
					if (allAddedRows.Contains(row) == false)
					{
						realUpdatedRows.Add(row);
					}
					i = i + 1;
				}
				return realUpdatedRows.ToArray();
			}
			
			///<summary>
			///Update all changes to the dataset.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public virtual int UpdateAll(dataDataSet dataSet)
			{
				if (ReferenceEquals(dataSet, null))
				{
					throw (new global::System.ArgumentNullException("dataSet"));
				}
				if (dataSet.HasChanges() == false)
				{
					return 0;
				}
				if ((!ReferenceEquals((this._leaseTableAdapter), null)) 
					&& (this.MatchTableAdapterConnection(this._leaseTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。"));
				}
				if ((!ReferenceEquals((this._ordersTableAdapter), null)) 
					&& (this.MatchTableAdapterConnection(this._ordersTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。"));
				}
				if ((!ReferenceEquals((this._usersTableAdapter), null)) 
					&& (this.MatchTableAdapterConnection(this._usersTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。"));
				}
				if ((!ReferenceEquals((this._venueTableAdapter), null)) 
					&& (this.MatchTableAdapterConnection(this._venueTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。"));
				}
				if ((!ReferenceEquals((this._vtypeTableAdapter), null)) 
					&& (this.MatchTableAdapterConnection(this._vtypeTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。"));
				}
				global::System.Data.IDbConnection workConnection = this.Connection;
				if (ReferenceEquals(workConnection, null))
				{
					throw (new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" + 
						"eAdapter 实例。"));
				}
				bool workConnOpened = false;
				if (((int) (workConnection.State) & (int) global::System.Data.ConnectionState.Broken) 
					== (int) global::System.Data.ConnectionState.Broken)
				{
					workConnection.Close();
				}
				if (workConnection.State == global::System.Data.ConnectionState.Closed)
				{
					workConnection.Open();
					workConnOpened = true;
				}
				global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
				if (ReferenceEquals(workTransaction, null))
				{
					throw (new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。"));
				}
				global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
				global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
				int result = 0;
				global::System.Data.DataSet backupDataSet = null;
				if (this.BackupDataSetBeforeUpdate)
				{
					backupDataSet = new global::System.Data.DataSet();
					backupDataSet.Merge(dataSet);
				}
				try
				{
					//---- Prepare for update -----------
					//
					if (!ReferenceEquals((this._leaseTableAdapter), null))
					{
						revertConnections.Add(this._leaseTableAdapter, this._leaseTableAdapter.Connection);
						this._leaseTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._leaseTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._leaseTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._leaseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._leaseTableAdapter.Adapter);
						}
					}
					if (!ReferenceEquals((this._ordersTableAdapter), null))
					{
						revertConnections.Add(this._ordersTableAdapter, this._ordersTableAdapter.Connection);
						this._ordersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._ordersTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._ordersTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._ordersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._ordersTableAdapter.Adapter);
						}
					}
					if (!ReferenceEquals((this._usersTableAdapter), null))
					{
						revertConnections.Add(this._usersTableAdapter, this._usersTableAdapter.Connection);
						this._usersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._usersTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._usersTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._usersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._usersTableAdapter.Adapter);
						}
					}
					if (!ReferenceEquals((this._venueTableAdapter), null))
					{
						revertConnections.Add(this._venueTableAdapter, this._venueTableAdapter.Connection);
						this._venueTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._venueTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._venueTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._venueTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._venueTableAdapter.Adapter);
						}
					}
					if (!ReferenceEquals((this._vtypeTableAdapter), null))
					{
						revertConnections.Add(this._vtypeTableAdapter, this._vtypeTableAdapter.Connection);
						this._vtypeTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._vtypeTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._vtypeTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._vtypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._vtypeTableAdapter.Adapter);
						}
					}
					//
					//---- Perform updates -----------
					//
					if (this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)
					{
						result = result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
						result = result + this.UpdateInsertedRows(dataSet, allAddedRows);
					}
					else
					{
						result = result + this.UpdateInsertedRows(dataSet, allAddedRows);
						result = result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
					}
					result = result + this.UpdateDeletedRows(dataSet, allChangedRows);
					//
					//---- Commit updates -----------
					//
					workTransaction.Commit();
					if (0 < allAddedRows.Count)
					{
						global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allAddedRows.Count)];
						allAddedRows.CopyTo(rows);
						int i = 0;
						while (i < rows.Length)
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							i = i + 1;
						}
					}
					if (0 < allChangedRows.Count)
					{
						global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allChangedRows.Count)];
						allChangedRows.CopyTo(rows);
						int i = 0;
						while (i < rows.Length)
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							i = i + 1;
						}
					}
				}
				catch (global::System.Exception ex)
				{
					workTransaction.Rollback();
					//---- Restore the dataset -----------
					if (this.BackupDataSetBeforeUpdate)
					{
						global::System.Diagnostics.Debug.Assert(!ReferenceEquals((backupDataSet), null));
						dataSet.Clear();
						dataSet.Merge(backupDataSet);
					}
					else
					{
						if (0 < allAddedRows.Count)
						{
							global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allAddedRows.Count)];
							allAddedRows.CopyTo(rows);
							int i = 0;
							while (i < rows.Length)
							{
								global::System.Data.DataRow row = rows[i];
								row.AcceptChanges();
								row.SetAdded();
								i = i + 1;
							}
						}
					}
					throw (ex);
				}
				finally
				{
					if (workConnOpened)
					{
						workConnection.Close();
					}
					if (!ReferenceEquals((this._leaseTableAdapter), null))
					{
						this._leaseTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._leaseTableAdapter]);
						this._leaseTableAdapter.Transaction = null;
					}
					if (!ReferenceEquals((this._ordersTableAdapter), null))
					{
						this._ordersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._ordersTableAdapter]);
						this._ordersTableAdapter.Transaction = null;
					}
					if (!ReferenceEquals((this._usersTableAdapter), null))
					{
						this._usersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._usersTableAdapter]);
						this._usersTableAdapter.Transaction = null;
					}
					if (!ReferenceEquals((this._venueTableAdapter), null))
					{
						this._venueTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._venueTableAdapter]);
						this._venueTableAdapter.Transaction = null;
					}
					if (!ReferenceEquals((this._vtypeTableAdapter), null))
					{
						this._vtypeTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._vtypeTableAdapter]);
						this._vtypeTableAdapter.Transaction = null;
					}
					if (0 < adaptersWithAcceptChangesDuringUpdate.Count)
					{
						global::System.Data.Common.DataAdapter[] adapters = new global::System.Data.Common.DataAdapter[(adaptersWithAcceptChangesDuringUpdate.Count)];
						adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
						int i = 0;
						while (i < adapters.Length)
						{
							global::System.Data.Common.DataAdapter adapter = adapters[i];
							adapter.AcceptChangesDuringUpdate = true;
							i = i + 1;
						}
					}
				}
				return result;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
			{
				global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
			{
				if (!ReferenceEquals((this._connection), null))
				{
					return true;
				}
				if ((ReferenceEquals(this.Connection, null)) 
					|| (ReferenceEquals(inputConnection, null)))
				{
					return true;
				}
				if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
				{
					return true;
				}
				return false;
			}
			
			///<summary>
			///Update Order Option
			///</summary>
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public enum UpdateOrderOption
			{
				
				InsertUpdateDelete = 0,
				
				UpdateInsertDelete = 1
			}
			
			///<summary>
			///Used to sort self-referenced table's rows
			///</summary>
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
			{
				
				private global::System.Data.DataRelation _relation;
				
				private int _childFirst;
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
				{
					this._relation = relation;
					if (childFirst)
					{
						this._childFirst = -1;
					}
					else
					{
						this._childFirst = 1;
					}
				}
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, ref int distance)
				{
					global::System.Diagnostics.Debug.Assert(!ReferenceEquals((row), null));
					global::System.Data.DataRow root = row;
					distance = 0;
					
					global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
					traversedRows[row] = row;
					
					global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
					
					while ((!ReferenceEquals((parent), null)) 
						&& (traversedRows.ContainsKey(parent) == false))
					{
						distance = distance + 1;
						root = parent;
						traversedRows[parent] = parent;
						parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
						
					}
					
					if (distance == 0)
					{
						traversedRows.Clear();
						traversedRows[row] = row;
						parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
						
						while ((!ReferenceEquals((parent), null)) 
							&& (traversedRows.ContainsKey(parent) == false))
						{
							distance = distance + 1;
							root = parent;
							traversedRows[parent] = parent;
							parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
							
						}
					}
					
					return root;
				}
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
				{
					if (object.ReferenceEquals(row1, row2))
					{
						return 0;
					}
					if (ReferenceEquals(row1, null))
					{
						return -1;
					}
					if (ReferenceEquals(row2, null))
					{
						return 1;
					}
					
					int distance1 = 0;
					global::System.Data.DataRow root1 = this.GetRoot(row1, ref distance1);
					
					int distance2 = 0;
					global::System.Data.DataRow root2 = this.GetRoot(row2, ref distance2);
					
					if (object.ReferenceEquals(root1, root2))
					{
						return (this._childFirst * distance1.CompareTo(distance2));
					}
					else
					{
						global::System.Diagnostics.Debug.Assert((!ReferenceEquals((root1.Table), null)) 
							&& (!ReferenceEquals((root2.Table), null)));
						if (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))
						{
							return -1;
						}
						else
						{
							return 1;
						}
					}
				}
			}
		}
	}
	
}
