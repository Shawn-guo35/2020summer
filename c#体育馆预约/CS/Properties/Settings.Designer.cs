// VBConversions Note: VB project level imports
using System.Collections.Generic;
using System;
using System.Linq;
using System.Drawing;
using System.Diagnostics;
using System.Threading.Tasks;
using System.Data;
using System.Xml.Linq;
using Microsoft.VisualBasic;
using System.Collections;
using System.Windows.Forms;
// End of VB project level imports

using System.Threading;
using WindowsApp1;

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------



namespace WindowsApp1
{
	namespace My
	{
		
		[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0"), 
		global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]sealed public 
		partial class Settings : global::System.Configuration.ApplicationSettingsBase
		{
			
			private static Settings defaultInstance; // VBConversions Note: Initial value cannot be assigned here since it is non-static.  Assignment has been moved to the class constructors.
			
#region My.Settings 自动保存功能
#if _MyType
			private static bool addedHandler;
			
			private static object addedHandlerLockObject = new object();
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]private static void AutoSaveSettings(global::System.Object sender, global::System.EventArgs e)
			{
				if ((new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase()).SaveMySettingsOnExit)
				{
					My.Settings.Default.Save();
				}
			}
#endif
#endregion
			
			public static Settings Default
			{
				get
				{
					
#if _MyType
					if (!addedHandler)
					{
						lock(addedHandlerLockObject)
						{
							if (!addedHandler)
							{
								(new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase()).Shutdown += AutoSaveSettings;
								addedHandler = true;
							}
						}
					}
#endif
					return defaultInstance;
				}
			}
			
			[global::System.Configuration.ApplicationScopedSettingAttribute(), 
			global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString), 
			global::System.Configuration.DefaultSettingValueAttribute("Data Source=DESKTOP-VROV8KN;Initial Catalog=data;Integrated Security=True")]public string dataConnectionString
			{
				get
				{
					return System.Convert.ToString(this["dataConnectionString"]);
				}
			}
			
			[global::System.Configuration.ApplicationScopedSettingAttribute(), 
			global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString), 
			global::System.Configuration.DefaultSettingValueAttribute("Data Source=DESKTOP-DSP6URK\\SQLEXPRESS;Initial Catalog=changguan;Integrated Secur" + 
			"ity=True")]public string changguanConnectionString
			{
				get
				{
					return System.Convert.ToString(this["changguanConnectionString"]);
				}
			}
		}
	}
	
	namespace My
	{
		
		[global::Microsoft.VisualBasic.HideModuleNameAttribute(), 
		global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]internal sealed class MySettingsProperty
		{
			
			[global::System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")]internal static global::WindowsApp1.My.Settings Settings
			{
				get
				{
					return global::WindowsApp1.My.Settings.Default;
				}
			}
		}
	}
	
}
